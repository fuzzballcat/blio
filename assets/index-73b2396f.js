(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const p of i.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&s(p)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();const b=document.getElementById("languagebar"),v=document.getElementById("srcinput");v.value="⌽⊂⍒-⍨×2\\+¨=' '¨',oN s\\'ereht on gninaem ot eht .eman'";v.addEventListener("keydown",l=>{l.keyCode==13&&l.shiftKey&&(runresult.innerText=I(v.value),l.preventDefault())},!1);const D="⍬+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊃⊂⊆⍳⍸⍒⍋⌽⊖&,#!¨⍨⍩∵/\\()'",L="+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊃⊂⊆⍳⍸⍒⍋⌽⊖&,#!¨⍨⍩∵()",T="/\\",k="⍬1234567890",G="¨⍨⍩∵()",F={"⍬":"The empty array","+":`Add
2→1`,"-":`Subtract
2→1`,"×":`Multiply
2→1`,"÷":`Divide
2→1`,"¯":`Negate
1→1`,"⌹":`Matrix inverse
1→1`,"*":`Exponent
2→1`,"⍟":`Logarithm
2→1`,"↑":`Maxmimum
2→1`,"↓":`Minimum
2→1`,"~":`Not
1→1`,"|":`Distance
2→1`,"⌈":`Ceiling
2→1`,"⌊":`Floor
2→1`,"%":`Mod
2→1`,"=":`Equals
2→1`,"≠":`Not equals
2→1`,"<":`Less
2→1`,"≤":`Less or equal
2→1`,"≥":`Greater or equal
2→1`,">":`Greater
2→1`,"≡":`Match
2→1`,"≢":`Not match
2→1`,"⊃":`Replicate
1→1`,"⊂":`Index
2→1`,"⊆":`Keep
2→1`,"⊖":`Rotate
2→1`,"⌽":`Reverse
1→1`,",":`Catenate
2→1`,"#":`Shape of
1→1`,"!":`Indices/Classify
1→1`,"⍳":`Indices-of
2→1`,"⍸":`Find sequence
2→1`,"&":`Take/drop
2→1`,"⍋":`Grade up
1→1`,"⍒":`Grade down
1→1`,"¨":`Dup
1→2`,"⍨":`Swap
2→2`,"⍩":`Roll
3→3`,"∵":`Pop
1→0`,"/":`Fold
1F`,"\\":`Scan
1F`,"(":`Stack to array
?→1
(+Modifier delimiter)`,")":`Set array stack point
0→0
(+Modifier delimiter)`,"'":"String"},C=l=>G.includes(l)?"hi_k":L.includes(l)?"hi_f":T.includes(l)?"hi_m":l[0]=="'"?"hi_s":k.includes(l)?"hi_c":l[0]==="\\"?"hi_e":!1;function M(l){const e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},t=s=>s.replace(/[&<>"'/]/ig,r=>e[r]);return l=l.split(new RegExp("(?<=(?<!\\\\)(?:\\\\\\\\)*)\\'")),l=l.map((s,r)=>r%2==0?s.replace(new RegExp([...L,...T,...k].map(i=>i.match(/[0-9]/)?i:"\\"+i).join("|"),"g"),i=>'<span class="'+C(i)+'">'+t(i)+"</span>"):r!==l.length-1?"<span class='hi_s'>'"+s.split(/(\\.)/g).map(i=>i.length==2&&i[0]=="\\"?"<span class='hi_e'>"+t(i)+"</span>":i).join("")+"'</span>":"<span class='hi_s'>'"+t(s)+"</span>").join(""),l}const P=document.getElementById("srcdisplay");v.addEventListener("input",()=>{P.innerHTML=M(v.value)});P.innerHTML=M(v.value);function x(l,e){if(document.selection)l.focus(),document.selection.createRange().text=myValue;else if(l.selectionStart||l.selectionStart=="0"){const t=l.selectionStart;l.value=l.value.substring(0,t)+e+l.value.substring(l.selectionEnd,l.value.length),l.focus(),l.selectionStart=t+e.length,l.selectionEnd=t+e.length}else l.value+=e}for(let l of D){const e=document.createElement("button");e.classList.add("glyphbutton");const t=C(l);t&&e.classList.add(t),e.innerText=l,b.appendChild(e);const s=document.createElement("div");s.classList.add("glyphbuttontooltip"),s.innerText=F[l],e.appendChild(s),e.addEventListener("click",r=>{x(v,l),v.dispatchEvent(new CustomEvent("input"))},!1)}const U=document.getElementById("run");U.addEventListener("click",l=>{runresult.innerText=I(v.value)},!1);function w(l){let e=[];for(let t=0;t<l.length;t++){let s=l[t];if(s!=" ")if(s=="'"){let r="";do if(s=="\\"&&(s=l[++t]),r+=s,s=l[++t],t>=l.length)return[!1,"Expected string terminator",t];while(s!="'");e.push(r)}else if(s==`
`||D.includes(s))e.push(s);else if(s.match(/[a-z]/i)){let r="";for(;s.match(/[a-z]/i)&&(r+=s,s=l[++t],!(t>=l.length)););t--,e.push(r)}else if(s.match(/[0-9]/)){let r="";for(;s.match(/[0-9]/)&&(r+=s,s=l[++t],!(t>=l.length)););if(s=="."&&(r+=s,s=l[++t],t<l.length))for(;s.match(/[0-9]/)&&(r+=s,s=l[++t],!(t>=l.length)););t--,e.push(parseFloat(r))}else return[!1,"Unknown token "+s,t]}return e}const a=["CONST","FUNCTION","ADD","NEGATE","SUB","MUL","DIV","EXP","LOG","MATINV","ARROPEN","ARRCLOSE","MAX","MIN","MOD","NOT","DISTANCE","CEILING","FLOOR","MATCH","NMATCH","EQUAL","NEQUAL","LESS","GREATER","LESSEQ","GREATEREQ","INDEX","KEEP","REPLICATE","ROTATE","REVERSE","CATENATE","SHAPEOF","INDICES","INDICESOF","FINDSEQ","TAKEDROP","GRADEUP","GRADEDOWN","DUP","SWAP","ROLL","POP","FOLD","SCAN"].map((l,e)=>({[l]:e+1})).reduce((l,e)=>({...l,...e}));function c(l,e){return{shape:l,ravel:e}}function Q(l){let e=0;const t=[];let s=!1;for(;e<l.length;){const r=l[e];if(typeof r=="number")t.push(a.CONST,r);else if(r.length&&r[0]=="'")t.push(a.CONST,r.length==2?r.slice(1):c([r.length-1],[...r.slice(1)]));else if(r=="⍬")t.push(a.CONST,c([0],[]));else if(typeof r=="string"&&L.includes(r)){const i={"+":a.ADD,"-":a.SUB,"×":a.MUL,"÷":a.DIV,"*":a.EXP,"⍟":a.LOG,"⌹":a.MATINV,"¯":a.NEGATE,"↑":a.MAX,"↓":a.MIN,"~":a.NOT,"|":a.DISTANCE,"⌈":a.CEILING,"⌊":a.FLOOR,"%":a.MOD,"=":a.EQUAL,"≠":a.NEQUAL,"<":a.LESS,">":a.GREATER,"≤":a.LESSEQ,"≥":a.GREATEREQ,"≡":a.MATCH,"≢":a.NMATCH,"⊃":a.REPLICATE,"⊂":a.INDEX,"⊆":a.KEEP,"⌽":a.REVERSE,"⊖":a.ROTATE,",":a.CATENATE,"#":a.SHAPEOF,"!":a.INDICES,"⍳":a.INDICESOF,"⍸":a.FINDSEQ,"&":a.TAKEDROP,"⍋":a.GRADEUP,"⍒":a.GRADEDOWN,"(":a.ARRCLOSE,")":a.ARROPEN,"¨":a.DUP,"⍨":a.SWAP,"⍩":a.ROLL,"∵":a.POP}[r];if(i===void 0)return[!1,"internalerror on '"+r+"'"];if(t.push(i),i===a.ARRCLOSE){s=!0,e++;continue}}else if(typeof r=="string"&&T.includes(r)){if(s){t.pop();let p=[];for(let u=0;u<t.length;u++){if(t[u]==a.CONST){u++;continue}t[u]==a.ARROPEN&&p.push([")",u]),t[u]==a.ARRCLOSE&&p.push(["(",u])}let h=1,o;for(let u=p.length-1;u>=0;u--)if(p[u][0]==")"?h--:h++,h==0){o=p[u][1];break}t.splice(o,1);let f=[];for(let u=0,E=t.length-o;u<E;u++)f.push(t.pop());t.push(a.FUNCTION,f.reverse())}const i={"/":a.FOLD,"\\":a.SCAN}[r];if(i===void 0)return[!1,"internalerror on '"+r+"'"];t.splice(t.length-1-+s,0,i)}else return[!1,"parse error on '"+r+"'"];e++,s=!1}return t}function V(l,e,t){let s=[];for(let r=0;r<t;r++)for(let i=0;i<t;i++){let p=0;for(let h=0;h<t;h++)p+=l[r*t+h]*e[h*t+i];s.push(p)}return s}function X(l){if(g(l))return 1/l;if(l.shape.length===1){let o=l.ravel.map(f=>f*f).reduce((f,u)=>f+u,0);return l.map(f=>f/o)}if(l.shape.length>2||l.shape[0]!==l.shape[1])return[!1,"⌹: Shape error"];const e=l.shape[0],t=l.ravel,s=[];for(let o=0;o<e*e;o++)s.push(+(o%(e+1)===0));let r;function i(o){if(o===0)return[[1],s];let[f,u]=i(o-1),E=V(t,u,e),d=0;for(let m=0;m<e;m++)d+=E[m*e+m];d/=-o;let A=[];for(let m=0;m<e;m++)for(let O=0;O<e;O++)A.push(E[m*e+O]+s[m*e+O]*d);return o==e-1&&(r=A),[f.concat(d),A]}const p=i(e)[0],h=p[p.length-1];if(h===0)return[!1,"⌹: Domain error"];for(let o=0;o<e*e;o++)r[o]/=-h;return c([e,e],r)}function g(l){return typeof l=="number"||typeof l=="string"}function S(l,e){if(typeof l!=typeof e)return 0;if(g(l))return+(l===e);if(l.shape.length!=e.shape.length)return 0;for(let t=0;t<l.shape.length;t++)if(l.shape[t]!==e.shape[t])return 0;if(l.ravel.length!=e.ravel.length)return 0;for(let t=0;t<l.ravel.length;t++)if(!S(l.ravel[t],e.ravel[t]))return 0;return 1}function j(l,e,t){const s=g(e),r=g(t);if(s&&r)return l(e,t);if(s){let h=[];for(let o=0;o<t.ravel.length;o++)h.push(l(e,t.ravel[o]));return c(t.shape,h)}if(r){let h=[];for(let o=0;o<e.ravel.length;o++)h.push(l(e.ravel[o],t));return c(e.shape,h)}const i=Math.min(e.shape.length,t.shape.length);let p=!0;for(let h=0;h<i;h++)if(e.shape[h]!=t.shape[h]){p=!1;break}if(p)if(e.shape.length>t.shape.length){const h=e.shape.slice(i).reduce((f,u)=>f*u,1);let o=[];for(let f=0;f<t.ravel.length;f++){const u=t.ravel[f];for(let E=0;E<h;E++)o.push(l(e.ravel[f*h+E],u))}return c(e.shape,o)}else{const h=t.shape.slice(i).reduce((f,u)=>f*u,1);let o=[];for(let f=0;f<e.ravel.length;f++){const u=e.ravel[f];for(let E=0;E<h;E++)o.push(l(u,t.ravel[f*h+E]))}return c(t.shape,o)}}function H(l,e){if(g(e))return l(e);let t=[];for(let s=0;s<e.ravel.length;s++)t.push(l(e.ravel[s]));return c(e.shape,t)}let n=[],N=[];const B=[a.ADD,a.SUB,a.MUL,a.DIV,a.EXP,a.LOG,a.MAX,a.MIN,a.MOD,a.EQUAL,a.NEQUAL,a.LESS,a.GREATER,a.LESSEQ,a.GREATEREQ],R=["+","-","×","÷","*","⍟","↑","↓","%","=","≠"],K=[(l,e)=>l+e,(l,e)=>l-e,(l,e)=>l*e,(l,e)=>l/e,Math.pow,(l,e)=>Math.log(l)/Math.log(e),Math.max,Math.min,(l,e)=>(l%e+e)%e,(l,e)=>+(l===e),(l,e)=>+(l!==e),(l,e)=>+(l<e),(l,e)=>+(l>e),(l,e)=>+(l<=e),(l,e)=>+(l>=e)];function q(l){const e=B.indexOf(l);let t=n.pop();if(t===void 0)return[!1,R[e]+": Expected a value"];let s=n.length-1;if(s<0)return[!1,R[e]+": Expected another value"];let r=j(K[e],n[s],t);if(r===void 0)return[!1,R[e]+": Shape mismatch"];n[s]=r}const z=[a.NEGATE,a.NOT,a.CEILING,a.FLOOR],W=["¯","~","⌈","⌊"],J=[l=>-l,l=>+!l,Math.ceil,Math.floor];function Y(l){const e=z.indexOf(l);let t=n.length-1;if(t<0)return[!1,W[e]+": Expected a value"];n[t]=H(J[e],n[t])}function y(l){switch(l){case a.NEGATE:case a.NOT:case a.CEILING:case a.FLOOR:{const e=Y(l);if(e)return e;break}case a.ADD:case a.SUB:case a.MUL:case a.DIV:case a.EXP:case a.LOG:case a.MAX:case a.MIN:case a.MOD:case a.EQUAL:case a.NEQUAL:case a.LESS:case a.GREATER:case a.LESSEQ:case a.GREATEREQ:{const e=q(l);if(e)return e;break}case a.MATINV:{let e=n.length-1;if(e<0)return[!1,"⌹: Expected a value"];const t=X(n[e]);if(t.length&&t[0]===!1)return t;n[e]=t;break}case a.ARROPEN:{N.push(n.length);break}case a.ARRCLOSE:{if(!N.length)return[!1,"(: Mismatched parenthesis"];const e=N.pop(),t=n.length;let s=c([],[]),r=!1;for(let i=0;i<t-e;i++){const p=n.pop();let h;if(g(p)?(s.ravel.push(p),h=[]):(s.ravel=s.ravel.concat(p.ravel),h=p.shape),r===!1)r=h;else if(r.length!==h.length||!r.every((o,f)=>o===h[f]))return[!1,"(): Shape mismatch"]}s.shape.push(t-e),s.shape=s.shape.concat(r||[]),n.push(s);break}case a.DISTANCE:{const e=n.pop(),t=n.pop();if(g(e)&&g(t))return Math.abs(e-t);if(typeof e!=typeof t)return[!1,"|: Rank error"];if(e.ravel.length!=t.ravel.length)return[!1,"|: Length error"];let s=0;for(let r=0;r<e.ravel.length;r++){const i=e.ravel[r],p=t.ravel[r];s+=Math.pow(p-i,2)}n.push(Math.sqrt(s));break}case a.MATCH:{const e=n.pop();let t=n.length-1;n[t]=S(n[t],e);break}case a.NMATCH:{const e=n.pop();let t=n.length-1;n[t]=+!S(n[t],e);break}case a.INDEX:{const e=n.pop();let t=n.length-1;const s=n[t].ravel.length/n[t].shape[0];if(g(e)){const i=(e-1)*s;n[t]=c(n[t].shape.slice(1),n[t].ravel.slice(i,i+s));break}let r=[];for(let i=0;i<e.ravel.length;i++){const p=(e.ravel[i]-1)*s;r=r.concat(n[t].ravel.slice(p,p+s))}n[t]=c(e.shape.concat(n[t].shape.slice(1)),r);break}case a.REPLICATE:{let e=n.pop();if(g(e)&&(e=c([1],[e])),e.shape.length>1)return[!1,"⊃: Rank error"];let t=[];for(let s=0;s<e.ravel.length;s++)for(let r=0;r<e.ravel[s];r++)t.push(s+1);n.push(c([t.length],t));break}case a.KEEP:{let e=n.pop();const t=n.pop();if(g(t)&&g(e)){e?n.push(c([1],[t])):n.push(c([0],[]));break}if(typeof t!=typeof e)return[!1,"⊆: Rank mismatch"];if(e.ravel.length!=t.shape[0])return[!1,"⊆: Length mismatch"];let s=[],r=0,i=t.ravel.length/t.shape[0];for(let p=0;p<e.ravel.length;p++)e.ravel[p]&&(s=s.concat(t.ravel.slice(p*i,p*i+i)),r++);n.push(c([r,...t.shape.slice(1)],s));break}case a.ROTATE:{const e=n.pop();let t=n.length-1;const s=n[t].ravel.length/n[t].shape[0];if(e>0)for(let r=0;r<e;r++){const i=n[t].ravel.splice(0,s);n[t].ravel=n[t].ravel.concat(i)}else for(let r=0;r<-e;r++){const i=n[t].ravel.splice(n[t].ravel.length-s,s);n[t].ravel=i.concat(n[t].ravel)}break}case a.REVERSE:{let e=n.length-1;const t=n[e].shape[0],s=n[e].ravel.length/t;for(let r=0;r<t/2;r++){let i=n[e].ravel.slice(r*s,r*s+s);const p=t-r-1;n[e].ravel.splice(r*s,s,...n[e].ravel.slice(p*s,p*s+s)),n[e].ravel.splice(p*s,s,...i)}break}case a.CATENATE:{let e=n.pop(),t=n.length-1;if(g(e)&&(e=c([1],[e])),g(n[t])&&(n[t]=c([1],n[t])),n[t].shape.length===e.shape.length){for(let s=1;s<n[t].shape.length;s++)if(n[t].shape[s]!==e.shape[s])return[!1,",: Shape mismatch"];n[t].shape[0]+=e.shape[0]}else if(n[t].shape.length===e.shape.length+1){for(let s=1;s<n[t].shape.length;s++)if(n[t].shape[s]!==e.shape[s-1])return[!1,",: Shape mismatch"];n[t].shape[0]++}else if(e.shape.length===n[t].shape.length+1){for(let s=1;s<e.shape.length;s++)if(e.shape[s]!==n[t].shape[s-1])return[!1,",: Shape mismatch"];n[t].shape=e.shape,n[t].shape[0]++}else return[!1,",: Shape mismatch"];n[t].ravel=e.ravel.concat(n[t].ravel);break}case a.SHAPEOF:{let e=n.length-1;g(n[e])?n[e]=c([0],[]):n[e]=c([n[e].shape.length],n[e].shape);break}case a.INDICES:{const e=n.pop();let t=[];if(g(e)){for(let s=0;s<e;s++)t.push(s+1);n.push(c([t.length],t))}else{let s=[];for(let r=0;r<e.ravel.length;r++){const i=s.findIndex(p=>S(e.ravel[r],p));i<0?(s.push(e.ravel[r]),t.push(s.length)):t.push(i+1)}n.push(c(e.shape,t))}break}case a.INDICESOF:{let e=n.pop(),t=n.pop();if(g(t)&&(t=c([1],[t])),g(e)&&(e=c([1],[e])),e.shape.length!==t.shape.length)return[!1,"⍳: Rank error"];for(let p=1;p<t.shape.length;p++)if(e.shape[p]!==t.shape[p])return[!1,"⍳: Rank error"];let s=c([0],[]),r=c([0,...t.shape.slice(1)],[]);const i=t.ravel.length/t.shape[0];for(let p=0;p<t.shape[0];p++)r.ravel=r.ravel.concat(t.ravel.slice(p*i,p*i+i)),r.shape[0]++,r.shape[0]>e.shape[0]&&(r.ravel.splice(0,i),r.shape[0]--),S(r,e)&&(s.ravel.push(p-e.shape[0]+2),s.shape[0]++);n.push(s);break}case a.FINDSEQ:{let e=n.pop(),t=n.pop();g(t)&&(t=c([1],[t])),g(e)&&(e=c([1],[e]));let s=c([0],[]),r=c([0,...t.shape.slice(1)],[]);const i=t.ravel.length/t.shape[0];for(let p=0;p<t.shape[0];p++)r.ravel=r.ravel.concat(t.ravel.slice(p*i,p*i+i)),r.shape[0]++,s.ravel.push(0),s.shape[0]++,r.shape[0]>e.shape[0]&&(r.ravel.splice(0,i),r.shape[0]--),S(r,e)&&(s.ravel[p-e.shape[0]+1]=1);n.push(s);break}case a.TAKEDROP:{let e=n.pop(),t=n.length-1;g(n[t])&&(n[t]=c([1],[n[t]])),e<0?(n[t].ravel=n[t].ravel.slice(-e*n[t].ravel.length/n[t].shape[0],n[t].ravel.length),n[t].shape[0]-=e):(n[t].ravel=n[t].ravel.slice(0,e*n[t].ravel.length/n[t].shape[0]),n[t].shape[0]=e);break}case a.GRADEUP:{let e=n.pop(),t=e.ravel;for(let s=0;s<t.length;s++)t[s]=[t[s],s];t.sort(function(s,r){return s[0]<r[0]?-1:1}),n.push(c(e.shape,t.map(s=>s[1]+1)));break}case a.GRADEDOWN:{let e=n.pop(),t=e.ravel;for(let s=0;s<t.length;s++)t[s]=[t[s],s];t.sort(function(s,r){return s[0]>r[0]?-1:1}),n.push(c(e.shape,t.map(s=>s[1]+1)));break}case a.DUP:{n.push(JSON.parse(JSON.stringify(n[n.length-1])));break}case a.SWAP:{const e=n.pop(),t=n.pop();n.push(e),n.push(t);break}case a.ROLL:{const e=n.pop(),t=n.pop(),s=n.pop();n.push(e),n.push(s),n.push(t);break}case a.POP:{n.pop();break}default:return[!1,"bytecode error on '"+Object.keys(a).find(e=>a[e]===l)+"'"]}}function _(l){let e=0;for(;e<l.length;){let t=[];for(;e<l.length&&l[e]==a.CONST;)n.push(l[++e]),e++;for(;e<l.length&&[a.FOLD,a.SCAN].includes(l[e]);)t.push(l[e++]);if(!(e>=l.length)){if(t.length==0){const s=y(l[e]);if(s)return s}else{let s;for(l[e]===a.FUNCTION?(e++,s=()=>{const i=_(l[e]);if(i.length&&i[0]===!1)return i}):s=()=>{const i=y(l[e]);if(i)return i};t.length>0;){const i=t.pop(),p=s;switch(i){case a.FOLD:{s=()=>{const h=n.pop(),o=h.ravel.length/h.shape[0];if(h.shape[0]==0)n.push(c(h.shape.slice(1),new Array(h.shape.slice(1).reduce((f,u)=>f*u,1)).fill().map(f=>0)));else if(h.shape[0]==1)n.push(h.shape.length==1?h.ravel[0]:c(h.shape.slice(1),h.ravel));else{const f=h.ravel.slice(0,o);n.push(h.shape.length==1?f[0]:c(h.shape.slice(1),f));for(let u=1;u<h.shape[0];u++){const E=h.ravel.slice(u*o,u*o+o);n.push(h.shape.length==1?E[0]:c(h.shape.slice(1),E));const d=p();if(d)return d}}};break}case a.SCAN:{s=()=>{const h=n.pop(),o=h.ravel.length/h.shape[0];if(h.shape[0]==0)n.push(c([0,...h.shape.slice(1)],[]));else if(h.shape[0]==1)n.push(c([1,...h.shape.slice(1)],h.ravel));else{let f=c(h.shape,[]);const u=h.ravel.slice(0,o);n.push(h.shape.length==1?u[0]:c(h.shape.slice(1),u)),f.ravel=f.ravel.concat(u);for(let E=1;E<h.shape[0];E++){const d=h.ravel.slice(E*o,E*o+o);n.push(h.shape.length==1?d[0]:c(h.shape.slice(1),d));const A=p();if(A)return A;f.ravel=f.ravel.concat(g(n[n.length-1])?n[n.length-1]:n[n.length-1].ravel)}n.pop(),n.push(f)}};break}default:return[!1,"bytecode error on '"+i+"'"]}}const r=s();if(r)return r}e++}}return N.length?[!1,"): Mismatched parenthesis"]:n.map(Z).join(`
`)}function Z(l){if(typeof l=="object"){let e=[],t=1;for(let r=l.shape.length-1;r>=0;r--)t*=l.shape[r],e.push(t);let s="";l.ravel.length||(l.shape.length>1?s+="⍬["+l.shape+"]":s+="⍬");for(let r=0;r<l.ravel.length;r++){if(r!==0)for(let i of e)r%i===0&&(s+=`
`);s+=""+l.ravel[r]+(typeof l.ravel[r]=="string"?"":" ")}return s}else return""+l}function I(l){let e=w(l);if(e.length&&e[0]===!1){let p="error: "+e[1]+`

`,h=0;for(let o of l.split(`
`)){const f=h;if(h+=o.length+1,h>e[2]){p+=o+`
`,p+=" ".repeat(e[2]-f),p+=`↑ here
`;break}}return p}e[e.length-1]!==`
`&&e.push(`
`);let t=[],s=[];e.map(p=>{p!==`
`?s.push(p):(t.push(s),s=[])}),e=t.map(p=>p.reverse()).flat();const r=Q(e);if(r.length&&r[0]===!1)return r[1];n=[],N=[];const i=_(r);return i.length&&i[0]===!1?i[1]:i}runresult.innerText=I(v.value);
