(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();const b=document.getElementById("languagebar"),v=document.getElementById("srcinput");v.value=(n=>n[Math.floor(Math.random()*n.length)])(["⌽⊂⍒-⍨×2\\+¨=' '¨',oN s\\'ereht on gninaem ot eht .eman'",`s←'questionably beatably deniably doubtedly'
r←⊆+1×2,1=' 's ,' 's
&¯1⊂⍋⍋=' 'r ,⊆≠' '¨r ⍴/+=' 'r ' un'`]);v.addEventListener("keydown",n=>{n.keyCode==13&&n.shiftKey&&(runresult.innerText=y(v.value),n.preventDefault())},!1);const k="⍬+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊃⊂⊆⍳⍸⍒⍋⌽⊖&,#!⍴¨⍨∵⍩/\\←()'",L="+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊃⊂⊆⍳⍸⍒⍋⌽⊖&,#!⍴¨⍨∵()",T="⍩/\\",C="⍬1234567890.",F="¨⍨∵←()",x={"⍬":"The empty array","+":`Add
2→1`,"-":`Subtract
2→1`,"×":`Multiply
2→1`,"÷":`Divide
2→1`,"¯":`Negate
1→1`,"⌹":`Matrix inverse
1→1`,"*":`Exponent
2→1`,"⍟":`Logarithm
2→1`,"↑":`Maxmimum
2→1`,"↓":`Minimum
2→1`,"~":`Not
1→1`,"|":`Distance
2→1`,"⌈":`Ceiling
2→1`,"⌊":`Floor
2→1`,"%":`Mod
2→1`,"=":`Equals
2→1`,"≠":`Not equals
2→1`,"<":`Less
2→1`,"≤":`Less or equal
2→1`,"≥":`Greater or equal
2→1`,">":`Greater
2→1`,"≡":`Match
2→1`,"≢":`Not match
2→1`,"⊃":`Replicate
1→1`,"⊂":`Index
2→1`,"⊆":`Keep
2→1`,"⊖":`Rotate
2→1`,"⌽":`Reverse
1→1`,",":`Catenate
2→1`,"#":`Shape of
1→1`,"!":`Indices/Classify
1→1`,"⍳":`Indices-of
2→1`,"⍸":`Find sequence
2→1`,"&":`Take/drop
2→1`,"⍴":`Reshape
2→1`,"⍋":`Grade up
1→1`,"⍒":`Grade down
1→1`,"¨":`Dup
1→2`,"⍨":`Swap
2→2`,"∵":`Pop
1→0`,"⍩":`Dip
1F`,"/":`Fold
1F`,"\\":`Scan
1F`,"←":"Assign","(":`Stack to array
?→1
(+Modifier delimiter)`,")":`Set array stack point
0→0
(+Modifier delimiter)`,"'":"String"},M=n=>F.includes(n)?"hi_k":L.includes(n)?"hi_f":T.includes(n)?"hi_m":n[0]=="'"?"hi_s":C.includes(n)?"hi_c":n[0]==="\\"?"hi_e":!1;function P(n){const e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},t=s=>s.replace(/[&<>"'/]/ig,r=>e[r]);return n=n.split(new RegExp("(?<=(?<!\\\\)(?:\\\\\\\\)*)\\'")),n=n.map((s,r)=>r%2==0?s.replace(new RegExp([...L,...T,...C].map(i=>i.match(/[0-9]/)?i:"\\"+i).join("|"),"g"),i=>'<span class="'+M(i)+'">'+t(i)+"</span>"):r!==n.length-1?"<span class='hi_s'>'"+s.split(/(\\.)/g).map(i=>i.length==2&&i[0]=="\\"?"<span class='hi_e'>"+t(i)+"</span>":i).join("")+"'</span>":"<span class='hi_s'>'"+t(s)+"</span>").join(""),n}const G=document.getElementById("srcdisplay");v.addEventListener("input",()=>{G.innerHTML=P(v.value)});G.innerHTML=P(v.value);function U(n,e){if(document.selection)n.focus(),document.selection.createRange().text=myValue;else if(n.selectionStart||n.selectionStart=="0"){const t=n.selectionStart;n.value=n.value.substring(0,t)+e+n.value.substring(n.selectionEnd,n.value.length),n.focus(),n.selectionStart=t+e.length,n.selectionEnd=t+e.length}else n.value+=e}for(let n of k){const e=document.createElement("button");e.classList.add("glyphbutton");const t=M(n);t&&e.classList.add(t),e.innerText=n,b.appendChild(e);const s=document.createElement("div");s.classList.add("glyphbuttontooltip"),s.innerText=x[n],e.appendChild(s),e.addEventListener("click",r=>{U(v,n),v.dispatchEvent(new CustomEvent("input"))},!1)}const w=document.getElementById("run");w.addEventListener("click",n=>{runresult.innerText=y(v.value)},!1);function Q(n){let e=[];for(let t=0;t<n.length;t++){let s=n[t];if(s!=" ")if(s=="'"){let r="";do if(s=="\\"&&(s=n[++t]),r+=s,s=n[++t],t>=n.length)return[!1,"Expected string terminator",t];while(s!="'");e.push(r)}else if(s==`
`||k.includes(s))e.push(s);else if(s.match(/[a-z]/i)){let r="";for(;s.match(/[a-z]/i)&&(r+=s,s=n[++t],!(t>=n.length)););t--,e.push(r)}else if(s=="."||s.match(/[0-9]/)){let r="";for(;s.match(/[0-9]/)&&(r+=s,s=n[++t],!(t>=n.length)););if(s=="."&&(r+=s,s=n[++t],t<n.length))for(;s.match(/[0-9]/)&&(r+=s,s=n[++t],!(t>=n.length)););t--,e.push(parseFloat(r))}else return[!1,"Unknown token "+s,t]}return e}const a=["CONST","FUNCTION","ASSIGN","NAME","ADD","NEGATE","SUB","MUL","DIV","EXP","LOG","MATINV","ARROPEN","ARRCLOSE","MAX","MIN","MOD","NOT","DISTANCE","CEILING","FLOOR","MATCH","NMATCH","EQUAL","NEQUAL","LESS","GREATER","LESSEQ","GREATEREQ","INDEX","KEEP","REPLICATE","ROTATE","REVERSE","CATENATE","SHAPEOF","INDICES","INDICESOF","FINDSEQ","TAKEDROP","RESHAPE","GRADEUP","GRADEDOWN","DUP","SWAP","POP","DIP","FOLD","SCAN"].map((n,e)=>({[n]:e+1})).reduce((n,e)=>({...n,...e}));function c(n,e){return{shape:n,ravel:e}}function H(n){let e=0;const t=[];let s=!1;for(;e<n.length;){const r=n[e];if(typeof r=="number")t.push(a.CONST,r);else if(r=="←"){if(e++,e>=n.length)return[!1,"expected name after ←"];if(typeof n[e]!="string")return[!1,"expected name after ←"];t.push(a.ASSIGN,n[e])}else if(r.length&&r[0]=="'")t.push(a.CONST,r.length==2?r.slice(1):c([r.length-1],[...r.slice(1)]));else if(r=="⍬")t.push(a.CONST,c([0],[]));else if(typeof r=="string"&&L.includes(r)){const i={"+":a.ADD,"-":a.SUB,"×":a.MUL,"÷":a.DIV,"*":a.EXP,"⍟":a.LOG,"⌹":a.MATINV,"¯":a.NEGATE,"↑":a.MAX,"↓":a.MIN,"~":a.NOT,"|":a.DISTANCE,"⌈":a.CEILING,"⌊":a.FLOOR,"%":a.MOD,"=":a.EQUAL,"≠":a.NEQUAL,"<":a.LESS,">":a.GREATER,"≤":a.LESSEQ,"≥":a.GREATEREQ,"≡":a.MATCH,"≢":a.NMATCH,"⊃":a.REPLICATE,"⊂":a.INDEX,"⊆":a.KEEP,"⌽":a.REVERSE,"⊖":a.ROTATE,",":a.CATENATE,"#":a.SHAPEOF,"!":a.INDICES,"⍳":a.INDICESOF,"⍸":a.FINDSEQ,"&":a.TAKEDROP,"⍴":a.RESHAPE,"⍋":a.GRADEUP,"⍒":a.GRADEDOWN,"(":a.ARRCLOSE,")":a.ARROPEN,"¨":a.DUP,"⍨":a.SWAP,"∵":a.POP}[r];if(i===void 0)return[!1,"internalerror on '"+r+"'"];if(t.push(i),i===a.ARRCLOSE){s=!0,e++;continue}}else if(typeof r=="string"&&T.includes(r)){if(s){t.pop();let o=[];for(let u=0;u<t.length;u++){if(t[u]==a.CONST){u++;continue}t[u]==a.ARROPEN&&o.push([")",u]),t[u]==a.ARRCLOSE&&o.push(["(",u])}let h=1,p;for(let u=o.length-1;u>=0;u--)if(o[u][0]==")"?h--:h++,h==0){p=o[u][1];break}t.splice(p,1);let f=[];for(let u=0,E=t.length-p;u<E;u++)f.push(t.pop());t.push(a.FUNCTION,f.reverse())}const i={"/":a.FOLD,"\\":a.SCAN,"⍩":a.DIP}[r];if(i===void 0)return[!1,"internalerror on '"+r+"'"];t.splice(t.length-1-+s,0,i)}else if(typeof r=="string")t.push(a.NAME,r);else return[!1,"parse error on '"+r+"'"];e++,s=!1}return t}function V(n,e,t){let s=[];for(let r=0;r<t;r++)for(let i=0;i<t;i++){let o=0;for(let h=0;h<t;h++)o+=n[r*t+h]*e[h*t+i];s.push(o)}return s}function X(n){if(g(n))return 1/n;if(n.shape.length===1){let p=n.ravel.map(f=>f*f).reduce((f,u)=>f+u,0);return n.map(f=>f/p)}if(n.shape.length>2||n.shape[0]!==n.shape[1])return[!1,"⌹: Shape error"];const e=n.shape[0],t=n.ravel,s=[];for(let p=0;p<e*e;p++)s.push(+(p%(e+1)===0));let r;function i(p){if(p===0)return[[1],s];let[f,u]=i(p-1),E=V(t,u,e),d=0;for(let m=0;m<e;m++)d+=E[m*e+m];d/=-p;let A=[];for(let m=0;m<e;m++)for(let O=0;O<e;O++)A.push(E[m*e+O]+s[m*e+O]*d);return p==e-1&&(r=A),[f.concat(d),A]}const o=i(e)[0],h=o[o.length-1];if(h===0)return[!1,"⌹: Domain error"];for(let p=0;p<e*e;p++)r[p]/=-h;return c([e,e],r)}function g(n){return typeof n=="number"||typeof n=="string"}function S(n,e){if(typeof n!=typeof e)return 0;if(g(n))return+(n===e);if(n.shape.length!=e.shape.length)return 0;for(let t=0;t<n.shape.length;t++)if(n.shape[t]!==e.shape[t])return 0;if(n.ravel.length!=e.ravel.length)return 0;for(let t=0;t<n.ravel.length;t++)if(!S(n.ravel[t],e.ravel[t]))return 0;return 1}function j(n,e,t){const s=g(e),r=g(t);if(s&&r)return n(e,t);if(s){let h=[];for(let p=0;p<t.ravel.length;p++)h.push(n(e,t.ravel[p]));return c(t.shape,h)}if(r){let h=[];for(let p=0;p<e.ravel.length;p++)h.push(n(e.ravel[p],t));return c(e.shape,h)}const i=Math.min(e.shape.length,t.shape.length);let o=!0;for(let h=0;h<i;h++)if(e.shape[h]!=t.shape[h]){o=!1;break}if(o)if(e.shape.length>t.shape.length){const h=e.shape.slice(i).reduce((f,u)=>f*u,1);let p=[];for(let f=0;f<t.ravel.length;f++){const u=t.ravel[f];for(let E=0;E<h;E++)p.push(n(e.ravel[f*h+E],u))}return c(e.shape,p)}else{const h=t.shape.slice(i).reduce((f,u)=>f*u,1);let p=[];for(let f=0;f<e.ravel.length;f++){const u=e.ravel[f];for(let E=0;E<h;E++)p.push(n(u,t.ravel[f*h+E]))}return c(t.shape,p)}}function q(n,e){if(g(e))return n(e);let t=[];for(let s=0;s<e.ravel.length;s++)t.push(n(e.ravel[s]));return c(e.shape,t)}let l=[],N=[];const B=[a.ADD,a.SUB,a.MUL,a.DIV,a.EXP,a.LOG,a.MAX,a.MIN,a.MOD,a.EQUAL,a.NEQUAL,a.LESS,a.GREATER,a.LESSEQ,a.GREATEREQ],I=["+","-","×","÷","*","⍟","↑","↓","%","=","≠"],K=[(n,e)=>n+e,(n,e)=>n-e,(n,e)=>n*e,(n,e)=>n/e,Math.pow,(n,e)=>Math.log(n)/Math.log(e),Math.max,Math.min,(n,e)=>(n%e+e)%e,(n,e)=>+(n===e),(n,e)=>+(n!==e),(n,e)=>+(n<e),(n,e)=>+(n>e),(n,e)=>+(n<=e),(n,e)=>+(n>=e)];function z(n){const e=B.indexOf(n);let t=l.pop();if(t===void 0)return[!1,I[e]+": Expected a value"];let s=l.length-1;if(s<0)return[!1,I[e]+": Expected another value"];let r=j(K[e],l[s],t);if(r===void 0)return[!1,I[e]+": Shape mismatch"];l[s]=r}const W=[a.NEGATE,a.NOT,a.CEILING,a.FLOOR],J=["¯","~","⌈","⌊"],Y=[n=>-n,n=>+!n,Math.ceil,Math.floor];function Z(n){const e=W.indexOf(n);let t=l.length-1;if(t<0)return[!1,J[e]+": Expected a value"];l[t]=q(Y[e],l[t])}function D(n){switch(n){case a.NEGATE:case a.NOT:case a.CEILING:case a.FLOOR:{const e=Z(n);if(e)return e;break}case a.ADD:case a.SUB:case a.MUL:case a.DIV:case a.EXP:case a.LOG:case a.MAX:case a.MIN:case a.MOD:case a.EQUAL:case a.NEQUAL:case a.LESS:case a.GREATER:case a.LESSEQ:case a.GREATEREQ:{const e=z(n);if(e)return e;break}case a.MATINV:{let e=l.length-1;if(e<0)return[!1,"⌹: Expected a value"];const t=X(l[e]);if(t.length&&t[0]===!1)return t;l[e]=t;break}case a.ARROPEN:{N.push(l.length);break}case a.ARRCLOSE:{if(!N.length)return[!1,"(: Mismatched parenthesis"];const e=N.pop(),t=l.length;let s=c([],[]),r=!1;for(let i=0;i<t-e;i++){const o=l.pop();let h;if(g(o)?(s.ravel.push(o),h=[]):(s.ravel=s.ravel.concat(o.ravel),h=o.shape),r===!1)r=h;else if(r.length!==h.length||!r.every((p,f)=>p===h[f]))return[!1,"(): Shape mismatch"]}s.shape.push(t-e),s.shape=s.shape.concat(r||[]),l.push(s);break}case a.DISTANCE:{const e=l.pop(),t=l.pop();if(g(e)&&g(t))return Math.abs(e-t);if(typeof e!=typeof t)return[!1,"|: Rank error"];if(e.ravel.length!=t.ravel.length)return[!1,"|: Length error"];let s=0;for(let r=0;r<e.ravel.length;r++){const i=e.ravel[r],o=t.ravel[r];s+=Math.pow(o-i,2)}l.push(Math.sqrt(s));break}case a.MATCH:{const e=l.pop();let t=l.length-1;l[t]=S(l[t],e);break}case a.NMATCH:{const e=l.pop();let t=l.length-1;l[t]=+!S(l[t],e);break}case a.INDEX:{const e=l.pop();let t=l.length-1;const s=l[t].ravel.length/l[t].shape[0];if(g(e)){const i=(e-1)*s;l[t]=l[t].shape.length===1?l[t].ravel[i]:c(l[t].shape.slice(1),l[t].ravel.slice(i,i+s));break}let r=[];for(let i=0;i<e.ravel.length;i++){const o=(e.ravel[i]-1)*s;r=r.concat(l[t].ravel.slice(o,o+s))}l[t]=c(e.shape.concat(l[t].shape.slice(1)),r);break}case a.REPLICATE:{let e=l.pop();if(g(e)&&(e=c([1],[e])),e.shape.length>1)return[!1,"⊃: Rank error"];let t=[];for(let s=0;s<e.ravel.length;s++)for(let r=0;r<e.ravel[s];r++)t.push(s+1);l.push(c([t.length],t));break}case a.KEEP:{let e=l.pop();const t=l.pop();if(g(t)&&g(e)){let o=[];for(let h=0;h<e;h++)o.push(t);l.push(c([o.length],o));break}if(typeof t!=typeof e)return[!1,"⊆: Rank mismatch"];if(e.ravel.length!=t.shape[0])return[!1,"⊆: Length mismatch"];let s=[],r=0,i=t.ravel.length/t.shape[0];for(let o=0;o<e.ravel.length;o++)for(let h=0;h<e.ravel[o];h++)s=s.concat(t.ravel.slice(o*i,o*i+i)),r++;l.push(c([r,...t.shape.slice(1)],s));break}case a.ROTATE:{const e=l.pop();let t=l.length-1;const s=l[t].ravel.length/l[t].shape[0];if(e>0)for(let r=0;r<e;r++){const i=l[t].ravel.splice(0,s);l[t].ravel=l[t].ravel.concat(i)}else for(let r=0;r<-e;r++){const i=l[t].ravel.splice(l[t].ravel.length-s,s);l[t].ravel=i.concat(l[t].ravel)}break}case a.REVERSE:{let e=l.length-1;const t=l[e].shape[0],s=l[e].ravel.length/t;for(let r=0;r<t/2;r++){let i=l[e].ravel.slice(r*s,r*s+s);const o=t-r-1;l[e].ravel.splice(r*s,s,...l[e].ravel.slice(o*s,o*s+s)),l[e].ravel.splice(o*s,s,...i)}break}case a.CATENATE:{let e=l.pop(),t=l.length-1;if(g(e)&&(e=c([1],[e])),g(l[t])&&(l[t]=c([1],l[t])),l[t].shape.length===e.shape.length){for(let s=1;s<l[t].shape.length;s++)if(l[t].shape[s]!==e.shape[s])return[!1,",: Shape mismatch"];l[t].shape[0]+=e.shape[0]}else if(l[t].shape.length===e.shape.length+1){for(let s=1;s<l[t].shape.length;s++)if(l[t].shape[s]!==e.shape[s-1])return[!1,",: Shape mismatch"];l[t].shape[0]++}else if(e.shape.length===l[t].shape.length+1){for(let s=1;s<e.shape.length;s++)if(e.shape[s]!==l[t].shape[s-1])return[!1,",: Shape mismatch"];l[t].shape=e.shape,l[t].shape[0]++}else return[!1,",: Shape mismatch"];l[t].ravel=e.ravel.concat(l[t].ravel);break}case a.SHAPEOF:{let e=l.length-1;g(l[e])?l[e]=c([0],[]):l[e]=c([l[e].shape.length],l[e].shape);break}case a.INDICES:{const e=l.pop();let t=[];if(g(e)){for(let s=0;s<e;s++)t.push(s+1);l.push(c([t.length],t))}else{let s=[];for(let r=0;r<e.ravel.length;r++){const i=s.findIndex(o=>S(e.ravel[r],o));i<0?(s.push(e.ravel[r]),t.push(s.length)):t.push(i+1)}l.push(c(e.shape,t))}break}case a.INDICESOF:{let e=l.pop(),t=l.pop();if(g(t)&&(t=c([1],[t])),g(e)&&(e=c([1],[e])),e.shape.length!==t.shape.length)return[!1,"⍳: Rank error"];for(let o=1;o<t.shape.length;o++)if(e.shape[o]!==t.shape[o])return[!1,"⍳: Rank error"];let s=c([0],[]),r=c([0,...t.shape.slice(1)],[]);const i=t.ravel.length/t.shape[0];for(let o=0;o<t.shape[0];o++)r.ravel=r.ravel.concat(t.ravel.slice(o*i,o*i+i)),r.shape[0]++,r.shape[0]>e.shape[0]&&(r.ravel.splice(0,i),r.shape[0]--),S(r,e)&&(s.ravel.push(o-e.shape[0]+2),s.shape[0]++);l.push(s);break}case a.FINDSEQ:{let e=l.pop(),t=l.pop();g(t)&&(t=c([1],[t])),g(e)&&(e=c([1],[e]));let s=c([0],[]),r=c([0,...t.shape.slice(1)],[]);const i=t.ravel.length/t.shape[0];for(let o=0;o<t.shape[0];o++)r.ravel=r.ravel.concat(t.ravel.slice(o*i,o*i+i)),r.shape[0]++,s.ravel.push(0),s.shape[0]++,r.shape[0]>e.shape[0]&&(r.ravel.splice(0,i),r.shape[0]--),S(r,e)&&(s.ravel[o-e.shape[0]+1]=1);l.push(s);break}case a.TAKEDROP:{let e=l.pop(),t=l.length-1;g(l[t])&&(l[t]=c([1],[l[t]])),e<0?(l[t].ravel=l[t].ravel.slice(-e*l[t].ravel.length/l[t].shape[0],l[t].ravel.length),l[t].shape[0]-=e):(l[t].ravel=l[t].ravel.slice(0,e*l[t].ravel.length/l[t].shape[0]),l[t].shape[0]=e);break}case a.RESHAPE:{let e=l.pop();if(g(e)&&(e=c([1],[e])),e.shape.length>1)return[!1,"Cannot reshape with non-vector shape."];let t=l.pop();g(t)&&(t=c([1],[t]));let s=[];const r=e.ravel.reduce((i,o)=>i*o,1);for(let i=0;i<r;i++)s.push(t.ravel[i%t.ravel.length]);l.push(c(e.ravel,s));break}case a.GRADEUP:{let e=l.pop(),t=e.ravel;for(let s=0;s<t.length;s++)t[s]=[t[s],s];t.sort(function(s,r){return s[0]<r[0]?-1:1}),l.push(c(e.shape,t.map(s=>s[1]+1)));break}case a.GRADEDOWN:{let e=l.pop(),t=e.ravel;for(let s=0;s<t.length;s++)t[s]=[t[s],s];t.sort(function(s,r){return s[0]>r[0]?-1:1}),l.push(c(e.shape,t.map(s=>s[1]+1)));break}case a.DUP:{l.push(JSON.parse(JSON.stringify(l[l.length-1])));break}case a.SWAP:{const e=l.pop(),t=l.pop();l.push(e),l.push(t);break}case a.POP:{l.pop();break}default:return[!1,"bytecode error on '"+Object.keys(a).find(e=>a[e]===n)+"'"]}}let R={};function _(n){let e=0;for(R={};e<n.length;){let t=[];for(;e<n.length&&n[e]===a.CONST||n[e]===a.NAME;)n[e]===a.NAME?l.push(JSON.parse(JSON.stringify(R[n[++e]]))):l.push(n[++e]),e++;for(;e<n.length&&[a.FOLD,a.SCAN,a.DIP].includes(n[e]);)t.push(n[e++]);if(!(e>=n.length)){if(n[e]==a.ASSIGN){if(t.length)return[!1,"bytecode error: modifiers for ←"];R[n[++e]]=l.pop(),e++;continue}if(t.length==0){const s=D(n[e]);if(s)return s}else{let s;for(n[e]===a.FUNCTION?(e++,s=()=>{const i=_(n[e]);if(i.length&&i[0]===!1)return i}):s=()=>{const i=D(n[e]);if(i)return i};t.length>0;){const i=t.pop(),o=s;switch(i){case a.FOLD:{s=()=>{const h=l.pop(),p=h.ravel.length/h.shape[0];if(h.shape[0]==0)l.push(c(h.shape.slice(1),new Array(h.shape.slice(1).reduce((f,u)=>f*u,1)).fill().map(f=>0)));else if(h.shape[0]==1)l.push(h.shape.length==1?h.ravel[0]:c(h.shape.slice(1),h.ravel));else{const f=h.ravel.slice(0,p);l.push(h.shape.length==1?f[0]:c(h.shape.slice(1),f));for(let u=1;u<h.shape[0];u++){const E=h.ravel.slice(u*p,u*p+p);l.push(h.shape.length==1?E[0]:c(h.shape.slice(1),E));const d=o();if(d)return d}}};break}case a.SCAN:{s=()=>{const h=l.pop(),p=h.ravel.length/h.shape[0];if(h.shape[0]==0)l.push(c([0,...h.shape.slice(1)],[]));else if(h.shape[0]==1)l.push(c([1,...h.shape.slice(1)],h.ravel));else{let f=c(h.shape,[]);const u=h.ravel.slice(0,p);l.push(h.shape.length==1?u[0]:c(h.shape.slice(1),u)),f.ravel=f.ravel.concat(u);for(let E=1;E<h.shape[0];E++){const d=h.ravel.slice(E*p,E*p+p);l.push(h.shape.length==1?d[0]:c(h.shape.slice(1),d));const A=o();if(A)return A;f.ravel=f.ravel.concat(g(l[l.length-1])?l[l.length-1]:l[l.length-1].ravel)}l.pop(),l.push(f)}};break}case a.DIP:{s=()=>{const h=l.pop(),p=o();if(p)return p;l.push(h)};break}default:return[!1,"bytecode error on '"+i+"'"]}}const r=s();if(r)return r}e++,n[e]==a.ASSIGN&&(R[n[++e]]=l.pop(),e++)}}return N.length?[!1,"): Mismatched parenthesis"]:l.map($).join(`
`)}function $(n){if(typeof n=="object"){let e=[],t=1;for(let r=n.shape.length-1;r>=0;r--)t*=n.shape[r],e.push(t);let s="";n.ravel.length||(n.shape.length>1?s+="⍬["+n.shape+"]":s+="⍬");for(let r=0;r<n.ravel.length;r++){if(r!==0)for(let i of e)r%i===0&&(s+=`
`);s+=""+n.ravel[r]+(typeof n.ravel[r]=="string"?"":" ")}return s}else return""+n}function y(n){let e=Q(n);if(e.length&&e[0]===!1){let o="error: "+e[1]+`

`,h=0;for(let p of n.split(`
`)){const f=h;if(h+=p.length+1,h>e[2]){o+=p+`
`,o+=" ".repeat(e[2]-f),o+=`↑ here
`;break}}return o}e[e.length-1]!==`
`&&e.push(`
`);let t=[],s=[];e.map(o=>{o!==`
`?s.push(o):(t.push(s),s=[])}),e=t.map(o=>o.reverse()).flat();const r=H(e);if(r.length&&r[0]===!1)return r[1];l=[],N=[];const i=_(r);return i.length&&i[0]===!1?i[1]:i}runresult.innerText=y(v.value);
