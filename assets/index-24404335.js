(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const h of i.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function t(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(a){if(a.ep)return;a.ep=!0;const i=t(a);fetch(a.href,i)}})();const U=document.getElementById("languagebar"),d=document.getElementById("srcinput");d.value=(n=>n[Math.floor(Math.random()*n.length)])(["⌽⊂⍒-⍨×2+\\¨=' '¨',oN s\\'ereht on gninaem ot eht .eman'",`s←'questionably beatably deniably doubtedly'
r←⊆+1×2=' '¨,' 's
&¯1⊂⍋⍋=' 'r ,⊆≠' '¨r ⍴+/=' 'r ' un'`]);d.addEventListener("keydown",n=>{n.keyCode===13&&n.shiftKey&&(runresult.innerText=k(d.value),n.preventDefault())},!1);const P="⍬ + ¯ - × ÷ ⌹ * ⍟ ↑ ↓ ~ | ⌈ ⌊ % < ≤ = ≥ > ≠ ≡ ≢ ⊃ ⊂ ⊆ ⍳ ⍸ ⍒ ⍋ ⌽ ⊖ & , # ! ⍴ ¨ ⍨ ∵ ⍩ ⍣ ⍤ / \\ ← () ' {}",y="+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊃⊂⊆⍳⍸⍒⍋⌽⊖&,#!⍴¨⍨∵()",D="⍩⍤⍣/\\",C="⍬1234567890.",b="¨⍨∵←(){}",x={"⍬":"Zilde","+":`Add
2→1`,"-":`Subtract
2→1`,"×":`Multiply
2→1`,"÷":`Divide
2→1`,"¯":`Negate
1→1`,"⌹":`Matrix inverse
1→1`,"*":`Exponent
2→1`,"⍟":`Logarithm
2→1`,"↑":`Maxmimum
2→1`,"↓":`Minimum
2→1`,"~":`Not
1→1`,"|":`Distance
2→1`,"⌈":`Ceiling
2→1`,"⌊":`Floor
2→1`,"%":`Mod
2→1`,"=":`Equals
2→1`,"≠":`Not equals
2→1`,"<":`Less
2→1`,"≤":`Less or equal
2→1`,"≥":`Greater or equal
2→1`,">":`Greater
2→1`,"≡":`Match
2→1`,"≢":`Not match
2→1`,"⊃":`Replicate
1→1`,"⊂":`Index
2→1`,"⊆":`Keep
2→1`,"⊖":`Rotate
2→1`,"⌽":`Reverse
1→1`,",":`Catenate
2→1`,"#":`Shape of
1→1`,"!":`Indices/Classify
1→1`,"⍳":`Indices-of
2→1`,"⍸":`Find sequence
2→1`,"&":`Take/drop
2→1`,"⍴":`Reshape
2→1`,"⍋":`Grade up
1→1`,"⍒":`Grade down
1→1`,"¨":`Dup
1→2`,"⍨":`Swap
2→2`,"∵":`Pop
1→0`,"⍩":`Dip
1F`,"/":`Fold
1F`,"\\":`Scan
1F`,"⍣":`Repeat
1F1`,"⍤":`Until
2F`,"←":"Assign","()":`Stack to array
?→1`,"{}":"Defined function","'":"String"},M=n=>b.includes(n)?"hi_k":y.includes(n)?"hi_f":D.includes(n)?"hi_m":n[0]==="'"?"hi_s":C.includes(n)?"hi_c":n[0]==="\\"?"hi_e":!1;function F(n){const e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},t=s=>s.replace(/[&<>"'/]/ig,a=>e[a]);return n=n.split(new RegExp("(?<=(?<!\\\\)(?:\\\\\\\\)*)\\'")),n=n.map((s,a)=>a%2===0?s.replace(new RegExp([...y,...D,...C].map(i=>i.match(/[0-9]/)?i:"\\"+i).join("|"),"g"),i=>'<span class="'+M(i)+'">'+t(i)+"</span>"):a!==n.length-1?"<span class='hi_s'>'"+s.split(/(\\.)/g).map(i=>i.length===2&&i[0]==="\\"?"<span class='hi_e'>"+t(i)+"</span>":i).join("")+"'</span>":"<span class='hi_s'>'"+t(s)+"</span>").join(""),n}const _=document.getElementById("srcdisplay");d.addEventListener("input",()=>{_.innerHTML=F(d.value)});_.innerHTML=F(d.value);function w(n,e){if(document.selection)n.focus(),document.selection.createRange().text=myValue;else if(n.selectionStart||n.selectionStart==="0"){const t=n.selectionStart;n.value=n.value.substring(0,t)+e+n.value.substring(n.selectionEnd,n.value.length),n.focus(),n.selectionStart=t+e.length,n.selectionEnd=t+e.length}else n.value+=e}for(let n of P.split(" ")){const e=document.createElement("button");e.classList.add("glyphbutton");const t=M(n);t&&e.classList.add(t),e.innerText=n,U.appendChild(e);const s=document.createElement("div");s.classList.add("glyphbuttontooltip"),s.innerText=x[n],e.appendChild(s),e.addEventListener("click",a=>{w(d,n),d.dispatchEvent(new CustomEvent("input")),n.length>1&&(d.focus(),d.selectionStart--,d.selectionEnd--)},!1)}const Q=document.getElementById("run");Q.addEventListener("click",n=>{runresult.innerText=k(d.value)},!1);function H(n){let e=[];for(let t=0;t<n.length;t++){let s=n[t];if(s!==" ")if(s==="'"){let a="";do if(s==="\\"&&(s=n[++t]),a+=s,s=n[++t],t>=n.length)return[!1,"Expected string terminator",t];while(s!="'");e.push(a)}else if(s===`
`||P.includes(s))e.push(s);else if(s.match(/[a-z]/i)){let a="";for(;s.match(/[a-z]/i)&&(a+=s,s=n[++t],!(t>=n.length)););t--,e.push(a)}else if(s==="."||s.match(/[0-9]/)){let a="";for(;s.match(/[0-9]/)&&(a+=s,s=n[++t],!(t>=n.length)););if(s==="."&&(a+=s,s=n[++t],t<n.length))for(;s.match(/[0-9]/)&&(a+=s,s=n[++t],!(t>=n.length)););t--,e.push(parseFloat(a))}else return[!1,"Unknown token "+s,t]}return e}const r=["CONST","FOPEN","FUNCTION","ASSIGN","NAME","ADD","NEGATE","SUB","MUL","DIV","EXP","LOG","MATINV","ARROPEN","ARRCLOSE","MAX","MIN","MOD","NOT","DISTANCE","CEILING","FLOOR","MATCH","NMATCH","EQUAL","NEQUAL","LESS","GREATER","LESSEQ","GREATEREQ","INDEX","KEEP","REPLICATE","ROTATE","REVERSE","CATENATE","SHAPEOF","INDICES","INDICESOF","FINDSEQ","TAKEDROP","RESHAPE","GRADEUP","GRADEDOWN","DUP","SWAP","POP","DIP","REPEAT","UNTIL","FOLD","SCAN"].map((n,e)=>({[n]:e+1})).reduce((n,e)=>({...n,...e}));function f(n,e){return{shape:n,ravel:e}}function j(n){let e=0;const t=[];for(;e<n.length;){const s=n[e];if(typeof s=="number")t.push(r.CONST,s);else if(s==="}")t.push(r.FOPEN);else if(s==="{"){let a=[];for(;;){if(t.length===0)return[!1,"Mismatched {"];const i=t.pop();if(i===r.FOPEN){let h=0;for(;t.length>0&&h<t.length&&t[t.length-1-h]===r.CONST;)h++;if(h%2===0)break}a.push(i)}t.push(r.FUNCTION,a.reverse())}else if(s==="←"){if(e++,e>=n.length)return[!1,"expected name after ←"];if(typeof n[e]!="string")return[!1,"expected name after ←"];t.push(r.ASSIGN,n[e])}else if(s.length&&s[0]==="'")t.push(r.CONST,s.length===2?s.slice(1):f([s.length-1],[...s.slice(1)]));else if(s==="⍬")t.push(r.CONST,f([0],[]));else if(typeof s=="string"&&y.includes(s)){const a={"+":r.ADD,"-":r.SUB,"×":r.MUL,"÷":r.DIV,"*":r.EXP,"⍟":r.LOG,"⌹":r.MATINV,"¯":r.NEGATE,"↑":r.MAX,"↓":r.MIN,"~":r.NOT,"|":r.DISTANCE,"⌈":r.CEILING,"⌊":r.FLOOR,"%":r.MOD,"=":r.EQUAL,"≠":r.NEQUAL,"<":r.LESS,">":r.GREATER,"≤":r.LESSEQ,"≥":r.GREATEREQ,"≡":r.MATCH,"≢":r.NMATCH,"⊃":r.REPLICATE,"⊂":r.INDEX,"⊆":r.KEEP,"⌽":r.REVERSE,"⊖":r.ROTATE,",":r.CATENATE,"#":r.SHAPEOF,"!":r.INDICES,"⍳":r.INDICESOF,"⍸":r.FINDSEQ,"&":r.TAKEDROP,"⍴":r.RESHAPE,"⍋":r.GRADEUP,"⍒":r.GRADEDOWN,"(":r.ARRCLOSE,")":r.ARROPEN,"¨":r.DUP,"⍨":r.SWAP,"∵":r.POP}[s];if(a===void 0)return[!1,"internalerror on '"+s+"'"];t.push(a)}else if(typeof s=="string"&&D.includes(s)){const a={"/":r.FOLD,"\\":r.SCAN,"⍩":r.DIP,"⍣":r.REPEAT,"⍤":r.UNTIL}[s];if(a===void 0)return[!1,"internalerror on '"+s+"'"];t.push(a)}else if(typeof s=="string")t.push(r.NAME,s);else return[!1,"parse error on '"+s+"'"];e++}return t}function V(n,e,t){let s=[];for(let a=0;a<t;a++)for(let i=0;i<t;i++){let h=0;for(let o=0;o<t;o++)h+=n[a*t+o]*e[o*t+i];s.push(h)}return s}function X(n){if(g(n))return 1/n;if(n.shape.length===1){let p=n.ravel.map(c=>c*c).reduce((c,u)=>c+u,0);return n.map(c=>c/p)}if(n.shape.length>2||n.shape[0]!==n.shape[1])return[!1,"⌹: Shape error"];const e=n.shape[0],t=n.ravel,s=[];for(let p=0;p<e*e;p++)s.push(+(p%(e+1)===0));let a;function i(p){if(p===0)return[[1],s];let[c,u]=i(p-1),E=V(t,u,e),v=0;for(let m=0;m<e;m++)v+=E[m*e+m];v/=-p;let N=[];for(let m=0;m<e;m++)for(let O=0;O<e;O++)N.push(E[m*e+O]+s[m*e+O]*v);return p===e-1&&(a=N),[c.concat(v),N]}const h=i(e)[0],o=h[h.length-1];if(o===0)return[!1,"⌹: Domain error"];for(let p=0;p<e*e;p++)a[p]/=-o;return f([e,e],a)}function g(n){return typeof n=="number"||typeof n=="string"}function A(n,e){if(typeof n!=typeof e)return 0;if(g(n))return+(n===e);if(n.shape.length!=e.shape.length)return 0;for(let t=0;t<n.shape.length;t++)if(n.shape[t]!==e.shape[t])return 0;if(n.ravel.length!=e.ravel.length)return 0;for(let t=0;t<n.ravel.length;t++)if(!A(n.ravel[t],e.ravel[t]))return 0;return 1}function q(n,e,t){const s=g(e),a=g(t);if(s&&a)return n(e,t);if(s){let o=[];for(let p=0;p<t.ravel.length;p++)o.push(n(e,t.ravel[p]));return f(t.shape,o)}if(a){let o=[];for(let p=0;p<e.ravel.length;p++)o.push(n(e.ravel[p],t));return f(e.shape,o)}const i=Math.min(e.shape.length,t.shape.length);let h=!0;for(let o=0;o<i;o++)if(e.shape[o]!=t.shape[o]){h=!1;break}if(h)if(e.shape.length>t.shape.length){const o=e.shape.slice(i).reduce((c,u)=>c*u,1);let p=[];for(let c=0;c<t.ravel.length;c++){const u=t.ravel[c];for(let E=0;E<o;E++)p.push(n(e.ravel[c*o+E],u))}return f(e.shape,p)}else{const o=t.shape.slice(i).reduce((c,u)=>c*u,1);let p=[];for(let c=0;c<e.ravel.length;c++){const u=e.ravel[c];for(let E=0;E<o;E++)p.push(n(u,t.ravel[c*o+E]))}return f(t.shape,p)}}function G(n,e){if(g(e))return n(e);let t=[];for(let s=0;s<e.ravel.length;s++)t.push(n(e.ravel[s]));return f(e.shape,t)}let l=[],S=[];const B=[r.ADD,r.SUB,r.MUL,r.DIV,r.EXP,r.LOG,r.MAX,r.MIN,r.MOD,r.EQUAL,r.NEQUAL,r.LESS,r.GREATER,r.LESSEQ,r.GREATEREQ],I=["+","-","×","÷","*","⍟","↑","↓","%","=","≠","<",">","≤","≥"],K=[(n,e)=>n+e,(n,e)=>n-e,(n,e)=>n*e,(n,e)=>n/e,Math.pow,(n,e)=>Math.log(n)/Math.log(e),Math.max,Math.min,(n,e)=>(n%e+e)%e,(n,e)=>+(n===e),(n,e)=>+(n!==e),(n,e)=>+(n<e),(n,e)=>+(n>e),(n,e)=>+(n<=e),(n,e)=>+(n>=e)];function J(n){const e=B.indexOf(n);let t=l.pop();if(t===void 0)return[!1,I[e]+": Expected a value"];let s=l.length-1;if(s<0)return[!1,I[e]+": Expected another value"];let a=q(K[e],l[s],t);if(a===void 0)return[!1,I[e]+": Shape mismatch"];l[s]=a}const z=[r.NEGATE,r.NOT,r.CEILING,r.FLOOR],W=["¯","~","⌈","⌊"],Z=[n=>-n,n=>+!n,Math.ceil,Math.floor];function Y(n){const e=z.indexOf(n);let t=l.length-1;if(t<0)return[!1,W[e]+": Expected a value"];l[t]=G(Z[e],l[t])}function L(n){switch(n){case r.NEGATE:case r.NOT:case r.CEILING:case r.FLOOR:{const e=Y(n);if(e)return e;break}case r.ADD:case r.SUB:case r.MUL:case r.DIV:case r.EXP:case r.LOG:case r.MAX:case r.MIN:case r.MOD:case r.EQUAL:case r.NEQUAL:case r.LESS:case r.GREATER:case r.LESSEQ:case r.GREATEREQ:{const e=J(n);if(e)return e;break}case r.MATINV:{let e=l.length-1;if(e<0)return[!1,"⌹: Expected a value"];const t=X(l[e]);if(t.length&&t[0]===!1)return t;l[e]=t;break}case r.ARROPEN:{S.push(l.length);break}case r.ARRCLOSE:{if(!S.length)return[!1,"(: Mismatched parenthesis"];const e=S.pop(),t=l.length;let s=f([],[]),a=!1;for(let i=0;i<t-e;i++){const h=l.pop();let o;if(g(h)?(s.ravel.push(h),o=[]):(s.ravel=s.ravel.concat(h.ravel),o=h.shape),a===!1)a=o;else if(a.length!==o.length||!a.every((p,c)=>p===o[c]))return[!1,"(): Shape mismatch"]}s.shape.push(t-e),s.shape=s.shape.concat(a||[]),l.push(s);break}case r.DISTANCE:{const e=l.pop(),t=l.pop();if(g(e)&&g(t)){l.push(Math.abs(e-t));break}if(typeof e!=typeof t)return[!1,"|: Rank error"];if(e.ravel.length!=t.ravel.length)return[!1,"|: Length error"];let s=0;for(let a=0;a<e.ravel.length;a++){const i=e.ravel[a],h=t.ravel[a];s+=Math.pow(h-i,2)}l.push(Math.sqrt(s));break}case r.MATCH:{const e=l.pop();let t=l.length-1;l[t]=A(l[t],e);break}case r.NMATCH:{const e=l.pop();let t=l.length-1;l[t]=+!A(l[t],e);break}case r.INDEX:{const e=l.pop();let t=l.length-1;const s=l[t].ravel.length/l[t].shape[0];if(g(e)){const i=(e-1)*s;l[t]=l[t].shape.length===1?l[t].ravel[i]:f(l[t].shape.slice(1),l[t].ravel.slice(i,i+s));break}let a=[];for(let i=0;i<e.ravel.length;i++){const h=(e.ravel[i]-1)*s;a=a.concat(l[t].ravel.slice(h,h+s))}l[t]=f(e.shape.concat(l[t].shape.slice(1)),a);break}case r.REPLICATE:{let e=l.pop();if(g(e)&&(e=f([1],[e])),e.shape.length>1)return[!1,"⊃: Rank error"];let t=[];for(let s=0;s<e.ravel.length;s++)for(let a=0;a<e.ravel[s];a++)t.push(s+1);l.push(f([t.length],t));break}case r.KEEP:{let e=l.pop();const t=l.pop();if(g(t)&&g(e)){let h=[];for(let o=0;o<e;o++)h.push(t);l.push(f([h.length],h));break}if(typeof t!=typeof e)return[!1,"⊆: Rank mismatch"];if(e.ravel.length!=t.shape[0])return[!1,"⊆: Length mismatch"];let s=[],a=0,i=t.ravel.length/t.shape[0];for(let h=0;h<e.ravel.length;h++)for(let o=0;o<e.ravel[h];o++)s=s.concat(t.ravel.slice(h*i,h*i+i)),a++;l.push(f([a,...t.shape.slice(1)],s));break}case r.ROTATE:{const e=l.pop();let t=l.length-1;const s=l[t].ravel.length/l[t].shape[0];if(e>0)for(let a=0;a<e;a++){const i=l[t].ravel.splice(0,s);l[t].ravel=l[t].ravel.concat(i)}else for(let a=0;a<-e;a++){const i=l[t].ravel.splice(l[t].ravel.length-s,s);l[t].ravel=i.concat(l[t].ravel)}break}case r.REVERSE:{let e=l.length-1;const t=l[e].shape[0],s=l[e].ravel.length/t;for(let a=0;a<t/2;a++){let i=l[e].ravel.slice(a*s,a*s+s);const h=t-a-1;l[e].ravel.splice(a*s,s,...l[e].ravel.slice(h*s,h*s+s)),l[e].ravel.splice(h*s,s,...i)}break}case r.CATENATE:{let e=l.pop(),t=l.length-1;if(g(e)&&(e=f([1],[e])),g(l[t])&&(l[t]=f([1],l[t])),l[t].shape.length===e.shape.length){for(let s=1;s<l[t].shape.length;s++)if(l[t].shape[s]!==e.shape[s])return[!1,",: Shape mismatch"];l[t].shape[0]+=e.shape[0]}else if(l[t].shape.length===e.shape.length+1){for(let s=1;s<l[t].shape.length;s++)if(l[t].shape[s]!==e.shape[s-1])return[!1,",: Shape mismatch"];l[t].shape[0]++}else if(e.shape.length===l[t].shape.length+1){for(let s=1;s<e.shape.length;s++)if(e.shape[s]!==l[t].shape[s-1])return[!1,",: Shape mismatch"];l[t].shape=e.shape,l[t].shape[0]++}else return[!1,",: Shape mismatch"];l[t].ravel=e.ravel.concat(l[t].ravel);break}case r.SHAPEOF:{let e=l.length-1;g(l[e])?l[e]=f([0],[]):l[e]=f([l[e].shape.length],l[e].shape);break}case r.INDICES:{const e=l.pop();let t=[];if(g(e)){for(let s=0;s<e;s++)t.push(s+1);l.push(f([t.length],t))}else{let s=[];for(let a=0;a<e.ravel.length;a++){const i=s.findIndex(h=>A(e.ravel[a],h));i<0?(s.push(e.ravel[a]),t.push(s.length)):t.push(i+1)}l.push(f(e.shape,t))}break}case r.INDICESOF:{let e=l.pop(),t=l.pop();if(g(t)&&(t=f([1],[t])),g(e)&&(e=f([1],[e])),e.shape.length!==t.shape.length)return[!1,"⍳: Rank error"];for(let h=1;h<t.shape.length;h++)if(e.shape[h]!==t.shape[h])return[!1,"⍳: Rank error"];let s=f([0],[]),a=f([0,...t.shape.slice(1)],[]);const i=t.ravel.length/t.shape[0];for(let h=0;h<t.shape[0];h++)a.ravel=a.ravel.concat(t.ravel.slice(h*i,h*i+i)),a.shape[0]++,a.shape[0]>e.shape[0]&&(a.ravel.splice(0,i),a.shape[0]--),A(a,e)&&(s.ravel.push(h-e.shape[0]+2),s.shape[0]++);l.push(s);break}case r.FINDSEQ:{let e=l.pop(),t=l.pop();g(t)&&(t=f([1],[t])),g(e)&&(e=f([1],[e]));let s=f([0],[]),a=f([0,...t.shape.slice(1)],[]);const i=t.ravel.length/t.shape[0];for(let h=0;h<t.shape[0];h++)a.ravel=a.ravel.concat(t.ravel.slice(h*i,h*i+i)),a.shape[0]++,s.ravel.push(0),s.shape[0]++,a.shape[0]>e.shape[0]&&(a.ravel.splice(0,i),a.shape[0]--),A(a,e)&&(s.ravel[h-e.shape[0]+1]=1);l.push(s);break}case r.TAKEDROP:{let e=l.pop(),t=l.length-1;g(l[t])&&(l[t]=f([1],[l[t]])),e<0?(l[t].ravel=l[t].ravel.slice(-e*l[t].ravel.length/l[t].shape[0],l[t].ravel.length),l[t].shape[0]-=e):(l[t].ravel=l[t].ravel.slice(0,e*l[t].ravel.length/l[t].shape[0]),l[t].shape[0]=e);break}case r.RESHAPE:{let e=l.pop();if(g(e)&&(e=f([1],[e])),e.shape.length>1)return[!1,"Cannot reshape with non-vector shape."];let t=l.pop();g(t)&&(t=f([1],[t]));let s=[];const a=e.ravel.reduce((i,h)=>i*h,1);for(let i=0;i<a;i++)s.push(t.ravel[i%t.ravel.length]);l.push(f(e.ravel,s));break}case r.GRADEUP:{let e=l.pop(),t=e.ravel;for(let s=0;s<t.length;s++)t[s]=[t[s],s];t.sort(function(s,a){return s[0]<a[0]?-1:1}),l.push(f(e.shape,t.map(s=>s[1]+1)));break}case r.GRADEDOWN:{let e=l.pop(),t=e.ravel;for(let s=0;s<t.length;s++)t[s]=[t[s],s];t.sort(function(s,a){return s[0]>a[0]?-1:1}),l.push(f(e.shape,t.map(s=>s[1]+1)));break}case r.DUP:{l.push(JSON.parse(JSON.stringify(l[l.length-1])));break}case r.SWAP:{const e=l.pop(),t=l.pop();l.push(e),l.push(t);break}case r.POP:{l.pop();break}default:return[!1,"bytecode error on '"+Object.keys(r).find(e=>r[e]===n)+"'"]}}let T={};function R(n){let e=0;for(T={};e<n.length;){let t=[];for(;e<n.length&&n[e]===r.CONST||n[e]===r.NAME;)n[e]===r.NAME?l.push(JSON.parse(JSON.stringify(T[n[++e]]))):l.push(n[++e]),e++;for(;e<n.length&&[r.FOLD,r.SCAN,r.DIP,r.REPEAT,r.UNTIL].includes(n[e]);)t.push(n[e++]);if(!(e>=n.length)){if(n[e]===r.ASSIGN){if(t.length)return[!1,"bytecode error: modifiers for ←"];T[n[++e]]=l.pop(),e++;continue}if(t.length===0)if(n[e]===r.FUNCTION){const s=R(n[++e]);if(s.length&&s[0]===!1)return s}else{const s=L(n[e]);if(s)return s}else{let s;if(n[e]===r.FUNCTION){e++;const i=n[e];s=()=>{const h=R(i);if(h.length&&h[0]===!1)return h}}else{const i=n[e];s=()=>{const h=L(i);if(h)return h}}for(;t.length>0;){const i=t.pop(),h=s;switch(i){case r.FOLD:{s=()=>{const o=l.pop(),p=o.ravel.length/o.shape[0];if(o.shape[0]===0)l.push(f(o.shape.slice(1),new Array(o.shape.slice(1).reduce((c,u)=>c*u,1)).fill().map(c=>0)));else if(o.shape[0]===1)l.push(o.shape.length===1?o.ravel[0]:f(o.shape.slice(1),o.ravel));else{const c=o.ravel.slice(0,p);l.push(o.shape.length===1?c[0]:f(o.shape.slice(1),c));for(let u=1;u<o.shape[0];u++){const E=o.ravel.slice(u*p,u*p+p);l.push(o.shape.length===1?E[0]:f(o.shape.slice(1),E));const v=h();if(v)return v}}};break}case r.SCAN:{s=()=>{const o=l.pop(),p=o.ravel.length/o.shape[0];if(o.shape[0]===0)l.push(f([0,...o.shape.slice(1)],[]));else if(o.shape[0]===1)l.push(f([1,...o.shape.slice(1)],o.ravel));else{let c=f(o.shape,[]);const u=o.ravel.slice(0,p);l.push(o.shape.length===1?u[0]:f(o.shape.slice(1),u)),c.ravel=c.ravel.concat(u);for(let E=1;E<o.shape[0];E++){const v=o.ravel.slice(E*p,E*p+p);l.push(o.shape.length===1?v[0]:f(o.shape.slice(1),v));const N=h();if(N)return N;c.ravel=c.ravel.concat(g(l[l.length-1])?l[l.length-1]:l[l.length-1].ravel)}l.pop(),l.push(c)}};break}case r.DIP:{s=()=>{const o=l.pop(),p=h();if(p)return p;l.push(o)};break}case r.REPEAT:{s=()=>{const o=l.pop(),p=l.pop();l.push(G(c=>{l.push(p);for(let u=0;u<c;u++)h();return l.pop()},o))};break}case r.UNTIL:{s=()=>{e++;let o;if(n[e]===r.FUNCTION){e++;const c=n[e];o=()=>{const u=R(c);if(u.length&&u[0]===!1)return u}}else{const c=n[e];o=()=>{const u=L(c);if(u)return u}}let p=!1;for(;;){o();const c=JSON.parse(JSON.stringify(l[l.length-1]));if(p!==!1){const u=JSON.parse(JSON.stringify(l));l.push(p),h();let E=l.pop();if(l=u,E===1)break}p=c}};break}default:return[!1,"bytecode error on '"+Object.keys(r).find(o=>r[o]===i)+"'"]}}const a=s();if(a)return a}e++,n[e]===r.ASSIGN&&(T[n[++e]]=l.pop(),e++)}}return S.length?[!1,"): Mismatched parenthesis"]:l.map($).join(`
`)}function $(n){if(typeof n=="object"){let e=[],t=1;for(let a=n.shape.length-1;a>=0;a--)t*=n.shape[a],e.push(t);let s="";n.ravel.length||(n.shape.length>1?s+="⍬["+n.shape+"]":s+="⍬");for(let a=0;a<n.ravel.length;a++){if(a!==0)for(let i of e)a%i===0&&(s+=`
`);s+=""+n.ravel[a]+(typeof n.ravel[a]=="string"?"":" ")}return s}else return""+n}function k(n){let e=H(n);if(e.length&&e[0]===!1){let h="error: "+e[1]+`

`,o=0;for(let p of n.split(`
`)){const c=o;if(o+=p.length+1,o>e[2]){h+=p+`
`,h+=" ".repeat(e[2]-c),h+=`↑ here
`;break}}return h}e[e.length-1]!==`
`&&e.push(`
`);let t=[],s=[];e.map(h=>{h!==`
`?s.push(h):(t.push(s),s=[])}),e=t.map(h=>h.reverse()).flat();const a=j(e);if(a.length&&a[0]===!1)return a[1];l=[],S=[];const i=R(a);return i.length&&i[0]===!1?i[1]:i}runresult.innerText=k(d.value);
