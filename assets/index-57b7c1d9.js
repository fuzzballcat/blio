(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const p of a.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&n(p)}).observe(document,{childList:!0,subtree:!0});function e(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(s){if(s.ep)return;s.ep=!0;const a=e(s);fetch(s.href,a)}})();const G=document.getElementById("languagebar"),A=document.getElementById("srcinput");A.value="⌽⊂⍒-⍨×2\\+¨=' '¨'gniroB egaugnaL detnemelpmI ylddO'";A.addEventListener("keydown",r=>{r.keyCode==13&&r.shiftKey&&(runresult.innerText=D(A.value),r.preventDefault())},!1);const y="⍬+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊃⊂⊆⌽⊖,#!⍳⍸&⍒⍋¨⍨⍩∵/\\∘⍤⍣⍥○()'",L="+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊃⊂⊆⌽⊖,#!⍳⍸&⍒⍋¨⍨⍩∵()",T="/\\∘⍤⍣⍥○",I="⍬1234567890",w="¨⍨⍩∵()",U={"⍬":"The empty array","+":`Add
2→1`,"-":`Subtract
2→1`,"×":`Multiply
2→1`,"÷":`Divide
2→1`,"¯":`Negate
1→1`,"⌹":`Matrix inverse
1→1`,"*":`Exponent
2→1`,"⍟":`Logarithm
2→1`,"↑":`Maxmimum
2→1`,"↓":`Minimum
2→1`,"~":`Not
1→1`,"|":`Distance
2→1`,"⌈":`Ceiling
2→1`,"⌊":`Floor
2→1`,"%":`Mod
2→1`,"=":`Equals
2→1`,"≠":`Not equals
2→1`,"<":`Less
2→1`,"≤":`Less or equal
2→1`,"≥":`Greater or equal
2→1`,">":`Greater
2→1`,"≡":`Match
2→1`,"≢":`Not match
2→1`,"⊃":`Replicate
1→1`,"⊂":`Index
2→1`,"⊆":`Keep
2→1`,"⊖":`Rotate
2→1`,"⌽":`Reverse
1→1`,",":`Catenate
2→1`,"#":`Shape of
1→1`,"!":`Indices/Classify
1→1`,"⍳":`Indices-of
2→1`,"⍸":`Find sequence
2→1`,"&":`Take/drop
2→1`,"⍋":`Grade up
1→1`,"⍒":`Grade down
1→1`,"¨":`Dup
1→2`,"⍨":`Swap
2→2`,"⍩":`Roll
3→3`,"∵":`Pop
1→0`,"/":`Fold
1F`,"\\":`Scan
1F`,"⍤":`With-axes
1F1`,"⍣":`Repeat
1F1`,"∘":`Product
1F1`,"⍥":`Over
1F`,"○":`Under
2F`,"(":`Stack to array
?→1
(+Modifier delimiter)`,")":`Set array stack point
0→0
(+Modifier delimiter)`,"'":"String"},C=r=>w.includes(r)?"hi_k":L.includes(r)?"hi_f":T.includes(r)?"hi_m":r[0]=="'"?"hi_s":I.includes(r)?"hi_c":!1;function P(r){const t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},e=n=>n.replace(/[&<>"'/]/ig,s=>t[s]);return r=r.split("'"),r=r.map((n,s)=>s%2==0?n.replace(new RegExp([...L,...T,...I].map(a=>a.match(/[0-9]/)?a:"\\"+a).join("|"),"g"),a=>'<span class="'+C(a)+'">'+e(a)+"</span>"):s!==r.length-1?"<span class='hi_s'>'"+n+"'</span>":"<span class='hi_s'>'"+n+"</span>").join(""),r}const M=document.getElementById("srcdisplay");A.addEventListener("input",()=>{M.innerHTML=P(A.value)});M.innerHTML=P(A.value);function _(r,t){if(document.selection)r.focus(),document.selection.createRange().text=myValue;else if(r.selectionStart||r.selectionStart=="0"){const e=r.selectionStart;r.value=r.value.substring(0,e)+t+r.value.substring(r.selectionEnd,r.value.length),r.focus(),r.selectionStart=e+t.length,r.selectionEnd=e+t.length}else r.value+=t}for(let r of y){const t=document.createElement("button");t.classList.add("glyphbutton");const e=C(r);e&&t.classList.add(e),t.innerText=r,G.appendChild(t);const n=document.createElement("div");n.classList.add("glyphbuttontooltip"),n.innerText=U[r],t.appendChild(n),t.addEventListener("click",s=>{_(A,r),A.dispatchEvent(new CustomEvent("input"))},!1)}const x=document.getElementById("run");x.addEventListener("click",r=>{runresult.innerText=D(A.value)},!1);function Q(r){let t=[];for(let e=0;e<r.length;e++){let n=r[e];if(n!=" ")if(n=="'"){let s="";do if(s+=n,n=r[++e],e>=r.length)break;while(n!="'");t.push(s)}else if(n==`
`||y.includes(n))t.push(n);else if(n.match(/[a-z]/i)){let s="";for(;n.match(/[a-z]/i)&&(s+=n,n=r[++e],!(e>=r.length)););e--,t.push(s)}else if(n.match(/[0-9]/)){let s="";for(;n.match(/[0-9]/)&&(s+=n,n=r[++e],!(e>=r.length)););if(n=="."&&(s+=n,n=r[++e],e<r.length))for(;n.match(/[0-9]/)&&(s+=n,n=r[++e],!(e>=r.length)););e--,t.push(parseFloat(s))}else return[!1,n,e]}return t}const i=["CONST","FUNCTION","ADD","NEGATE","SUB","MUL","DIV","EXP","LOG","MATINV","ARROPEN","ARRCLOSE","MAX","MIN","NOT","DISTANCE","CEILING","FLOOR","MATCH","NMATCH","EQUAL","NEQUAL","LESS","GREATER","LESSEQ","GREATEREQ","INDEX","KEEP","REPLICATE","ROTATE","REVERSE","CATENATE","SHAPEOF","INDICES","INDICESOF","FINDSEQ","TAKEDROP","GRADEUP","GRADEDOWN","DUP","SWAP","ROLL","POP","OPROD","FOLD","SCAN"].map((r,t)=>({[r]:t+1})).reduce((r,t)=>({...r,...t}));function u(r,t){return{shape:r,ravel:t}}function j(r){let t=0;const e=[];let n=!1;for(;t<r.length;){const s=r[t];if(typeof s=="number")e.push(i.CONST,s);else if(s.length&&s[0]=="'")e.push(i.CONST,s.length==2?s.slice(1):u([s.length-1],[...s.slice(1)]));else if(s=="⍬")e.push(i.CONST,u([0],[]));else if(typeof s=="string"&&L.includes(s)){const a={"+":i.ADD,"-":i.SUB,"×":i.MUL,"÷":i.DIV,"*":i.EXP,"⍟":i.LOG,"⌹":i.MATINV,"¯":i.NEGATE,"↑":i.MAX,"↓":i.MIN,"~":i.NOT,"|":i.DISTANCE,"⌈":i.CEILING,"⌊":i.FLOOR,"%":i.MOD,"=":i.EQUAL,"≠":i.NEQUAL,"<":i.LESS,">":i.GREATER,"≤":i.LESSEQ,"≥":i.GREATEREQ,"≡":i.MATCH,"≢":i.NMATCH,"⊃":i.REPLICATE,"⊂":i.INDEX,"⊆":i.KEEP,"⌽":i.REVERSE,"⊖":i.ROTATE,",":i.CATENATE,"#":i.SHAPEOF,"!":i.INDICES,"⍳":i.INDICESOF,"⍸":i.FINDSEQ,"&":i.TAKEDROP,"⍋":i.GRADEUP,"⍒":i.GRADEDOWN,"(":i.ARRCLOSE,")":i.ARROPEN,"¨":i.DUP,"⍨":i.SWAP,"⍩":i.ROLL,"∵":i.POP}[s];if(a===void 0)return[!1,"internalerror on '"+s+"'"];if(e.push(a),a===i.ARRCLOSE){n=!0,t++;continue}}else if(typeof s=="string"&&T.includes(s)){if(n){e.pop();let p=[];for(let f=0;f<e.length;f++){if(e[f]==i.CONST){f++;continue}e[f]==i.ARROPEN&&p.push([")",f]),e[f]==i.ARRCLOSE&&p.push(["(",f])}let h=1,o;for(let f=p.length-1;f>=0;f--)if(p[f][0]==")"?h--:h++,h==0){o=p[f][1];break}e.splice(o,1);let c=[];for(let f=0,d=e.length-o;f<d;f++)c.push(e.pop());e.push(i.FUNCTION,c.reverse())}const a={"/":i.FOLD,"\\":i.SCAN,"∘":i.OPROD}[s];if(a===void 0)return[!1,"internalerror on '"+s+"'"];e.splice(e.length-1-+n,0,a)}else return[!1,"parse error on '"+s+"'"];t++,n=!1}return e}function H(r,t,e){let n=[];for(let s=0;s<e;s++)for(let a=0;a<e;a++){let p=0;for(let h=0;h<e;h++)p+=r[s*e+h]*t[h*e+a];n.push(p)}return n}function V(r){if(g(r))return 1/r;if(r.shape.length===1){let o=r.ravel.map(c=>c*c).reduce((c,f)=>c+f,0);return r.map(c=>c/o)}if(r.shape.length>2||r.shape[0]!==r.shape[1])return[!1,"⌹: Shape error"];const t=r.shape[0],e=r.ravel,n=[];for(let o=0;o<t*t;o++)n.push(+(o%(t+1)===0));let s;function a(o){if(o===0)return[[1],n];let[c,f]=a(o-1),d=H(e,f,t),m=0;for(let E=0;E<t;E++)m+=d[E*t+E];m/=-o;let S=[];for(let E=0;E<t;E++)for(let O=0;O<t;O++)S.push(d[E*t+O]+n[E*t+O]*m);return o==t-1&&(s=S),[c.concat(m),S]}const p=a(t)[0],h=p[p.length-1];if(h===0)return[!1,"⌹: Domain error"];for(let o=0;o<t*t;o++)s[o]/=-h;return u([t,t],s)}function g(r){return typeof r=="number"||typeof r=="string"}function k(r,t){if(typeof r!=typeof t)return 0;if(g(r))return+(r===t);if(r.shape.length!=t.shape.length)return 0;for(let e=0;e<r.shape.length;e++)if(r.shape[e]!==t.shape[e])return 0;if(r.ravel.length!=t.ravel.length)return 0;for(let e=0;e<r.ravel.length;e++)if(!k(r.ravel[e],t.ravel[e]))return 0;return 1}function v(r,t,e){const n=g(t),s=g(e);if(n&&s)return r(t,e);if(n){let h=[];for(let o=0;o<e.ravel.length;o++)h.push(r(t,e.ravel[o]));return u(e.shape,h)}if(s){let h=[];for(let o=0;o<t.ravel.length;o++)h.push(r(t.ravel[o],e));return u(t.shape,h)}const a=Math.min(t.shape.length,e.shape.length);let p=!0;for(let h=0;h<a;h++)if(t.shape[h]!=e.shape[h]){p=!1;break}if(p)if(t.shape.length>e.shape.length){const h=t.shape.slice(a).reduce((c,f)=>c*f,1);let o=[];for(let c=0;c<e.ravel.length;c++){const f=e.ravel[c];for(let d=0;d<h;d++)o.push(r(t.ravel[c*h+d],f))}return u(t.shape,o)}else{const h=e.shape.slice(a).reduce((c,f)=>c*f,1);let o=[];for(let c=0;c<t.ravel.length;c++){const f=t.ravel[c];for(let d=0;d<h;d++)o.push(r(f,e.ravel[c*h+d]))}return u(e.shape,o)}}function R(r,t){if(g(t))return r(t);let e=[];for(let n=0;n<t.ravel.length;n++)e.push(r(t.ravel[n]));return u(t.shape,e)}let l=[],N=[];function b(r){switch(r){case i.ADD:{let t=l.pop(),e=l.length-1,n=v((s,a)=>s+a,l[e],t);if(n===void 0)return[!1,"+: Shape mismatch"];l[e]=n;break}case i.SUB:{let t=l.pop(),e=l.length-1,n=v((s,a)=>s-a,l[e],t);if(n===void 0)return[!1,"-: Shape mismatch"];l[e]=n;break}case i.NEGATE:{let t=l.length-1;l[t]=R(e=>-e,l[t]);break}case i.MUL:{let t=l.pop(),e=l.length-1,n=v((s,a)=>s*a,l[e],t);if(n===void 0)return[!1,"×: Shape mismatch"];l[e]=n;break}case i.DIV:{let t=l.pop(),e=l.length-1,n=v((s,a)=>s/a,l[e],t);if(n===void 0)return[!1,"÷: Shape mismatch"];l[e]=n;break}case i.EXP:{let t=l.pop(),e=l.length-1,n=v(Math.pow,l[e],t);if(n===void 0)return[!1,"*: Shape mismatch"];l[e]=n;break}case i.LOG:{let t=l.pop(),e=l.length-1,n=v((s,a)=>Math.log(s)/Math.log(a),l[e],t);if(n===void 0)return[!1,"⍟: Shape mismatch"];l[e]=n;break}case i.MATINV:{let t=l.length-1;const e=V(l[t]);if(e.length&&e[0]===!1)return e;l[t]=e;break}case i.ARROPEN:{N.push(l.length);break}case i.ARRCLOSE:{const t=N.pop(),e=l.length;let n=u([],[]),s=!1;for(let a=0;a<e-t;a++){const p=l.pop();let h;if(g(p)?(n.ravel.push(p),h=[]):(n.ravel=n.ravel.concat(p.ravel),h=p.shape),s===!1)s=h;else if(s.length!==h.length||!s.every((o,c)=>o===h[c]))return[!1,"(): Shape mismatch"]}n.shape.push(e-t),n.shape=n.shape.concat(s||[]),l.push(n);break}case i.MAX:{const t=l.pop();let e=l.length-1,n=v(Math.max,l[e],t);if(n===void 0)return[!1,"↑: Shape mismatch"];l[e]=n;break}case i.MIN:{const t=l.pop();let e=l.length-1,n=v(Math.min,l[e],t);if(n===void 0)return[!1,"↑: Shape mismatch"];l[e]=n;break}case i.NOT:{let t=l.length-1;l[t]=R(e=>+!e,l[t]);break}case i.DISTANCE:{const t=l.pop(),e=l.pop();if(g(t)&&g(e))return Math.abs(t-e);if(typeof t!=typeof e)return[!1,"|: Rank error"];if(t.ravel.length!=e.ravel.length)return[!1,"|: Length error"];let n=0;for(let s=0;s<t.ravel.length;s++){const a=t.ravel[s],p=e.ravel[s];n+=Math.pow(p-a,2)}l.push(Math.sqrt(n));break}case i.CEILING:{let t=l.length-1;l[t]=R(Math.ceil,l[t]);break}case i.FLOOR:{let t=l.length-1;l[t]=R(Math.floor,l[t]);break}case i.MOD:{const t=l.pop();let e=l.length-1,n=v((s,a)=>(s%a+a)%a,l[e],t);if(n===void 0)return[!1,"%: Shape mismatch"];l[e]=n;break}case i.MATCH:{const t=l.pop();let e=l.length-1;l[e]=k(l[e],t);break}case i.NMATCH:{const t=l.pop();let e=l.length-1;l[e]=+!k(l[e],t);break}case i.EQUAL:{const t=l.pop();let e=l.length-1,n=v((s,a)=>+(s===a),l[e],t);if(n===void 0)return[!1,"=: Shape mismatch"];l[e]=n;break}case i.NEQUAL:{const t=l.pop();let e=l.length-1,n=v((s,a)=>+(s!==a),l[e],t);if(n===void 0)return[!1,"≠: Shape mismatch"];l[e]=n;break}case i.LESS:{const t=l.pop();let e=l.length-1,n=v((s,a)=>+(s<a),l[e],t);if(n===void 0)return[!1,"<: Shape mismatch"];l[e]=n;break}case i.GREATER:{const t=l.pop();let e=l.length-1,n=v((s,a)=>+(s>a),l[e],t);if(n===void 0)return[!1,">: Shape mismatch"];l[e]=n;break}case i.LESSEQ:{const t=l.pop();let e=l.length-1,n=v((s,a)=>+(s<=a),l[e],t);if(n===void 0)return[!1,"≤: Shape mismatch"];l[e]=n;break}case i.GREATEREQ:{const t=l.pop();let e=l.length-1,n=v((s,a)=>+(s>=a),l[e],t);if(n===void 0)return[!1,"≥: Shape mismatch"];l[e]=n;break}case i.INDEX:{const t=l.pop();let e=l.length-1;const n=l[e].ravel.length/l[e].shape[0];if(g(t)){const a=(t-1)*n;l[e]=u(l[e].shape.slice(1),l[e].ravel.slice(a,a+n));break}let s=[];for(let a=0;a<t.ravel.length;a++){const p=(t.ravel[a]-1)*n;s=s.concat(l[e].ravel.slice(p,p+n))}l[e]=u(t.shape.concat(l[e].shape.slice(1)),s);break}case i.REPLICATE:{let t=l.pop();if(g(t)&&(t=u([1],[t])),t.shape.length>1)return[!1,"⊃: Rank error"];let e=[];for(let n=0;n<t.ravel.length;n++)for(let s=0;s<t.ravel[n];s++)e.push(n+1);l.push(u([e.length],e));break}case i.KEEP:{let t=l.pop();const e=l.pop();if(g(e)&&g(t)){t?l.push(u([1],[e])):l.push(u([0],[]));break}if(typeof e!=typeof t)return[!1,"⊆: Rank mismatch"];if(t.ravel.length!=e.shape[0])return[!1,"⊆: Length mismatch"];let n=[],s=0,a=e.ravel.length/e.shape[0];for(let p=0;p<t.ravel.length;p++)t.ravel[p]&&(n=n.concat(e.ravel.slice(p*a,p*a+a)),s++);l.push(u([s,...e.shape.slice(1)],n));break}case i.ROTATE:{const t=l.pop();let e=l.length-1;const n=l[e].ravel.length/l[e].shape[0];if(t>0)for(let s=0;s<t;s++){const a=l[e].ravel.splice(0,n);l[e].ravel=l[e].ravel.concat(a)}else for(let s=0;s<-t;s++){const a=l[e].ravel.splice(l[e].ravel.length-n,n);l[e].ravel=a.concat(l[e].ravel)}break}case i.REVERSE:{let t=l.length-1;const e=l[t].shape[0],n=l[t].ravel.length/e;for(let s=0;s<e/2;s++){let a=l[t].ravel.slice(s*n,s*n+n);const p=e-s-1;l[t].ravel.splice(s*n,n,...l[t].ravel.slice(p*n,p*n+n)),l[t].ravel.splice(p*n,n,...a)}break}case i.CATENATE:{let t=l.pop(),e=l.length-1;if(g(t)&&(t=u([1],[t])),g(l[e])&&(l[e]=u([1],l[e])),l[e].shape.length===t.shape.length){for(let n=1;n<l[e].shape.length;n++)if(l[e].shape[n]!==t.shape[n])return[!1,",: Shape mismatch"];l[e].shape[0]+=t.shape[0]}else if(l[e].shape.length===t.shape.length+1){for(let n=1;n<l[e].shape.length;n++)if(l[e].shape[n]!==t.shape[n-1])return[!1,",: Shape mismatch"];l[e].shape[0]++}else if(t.shape.length===l[e].shape.length+1){for(let n=1;n<t.shape.length;n++)if(t.shape[n]!==l[e].shape[n-1])return[!1,",: Shape mismatch"];l[e].shape=t.shape,l[e].shape[0]++}else return[!1,",: Shape mismatch"];l[e].ravel=t.ravel.concat(l[e].ravel);break}case i.SHAPEOF:{let t=l.length-1;g(l[t])?l[t]=u([0],[]):l[t]=u([l[t].shape.length],l[t].shape);break}case i.INDICES:{const t=l.pop();let e=[];if(g(t)){for(let n=0;n<t;n++)e.push(n+1);l.push(u([e.length],e))}else{let n=[];for(let s=0;s<t.ravel.length;s++){const a=n.findIndex(p=>k(t.ravel[s],p));a<0?(n.push(t.ravel[s]),e.push(n.length)):e.push(a+1)}l.push(u(t.shape,e))}break}case i.INDICESOF:{let t=l.pop(),e=l.pop();if(g(e)&&(e=u([1],[e])),g(t)&&(t=u([1],[t])),t.shape.length!==e.shape.length)return[!1,"⍳: Rank error"];for(let p=1;p<e.shape.length;p++)if(t.shape[p]!==e.shape[p])return[!1,"⍳: Rank error"];let n=u([0],[]),s=u([0,...e.shape.slice(1)],[]);const a=e.ravel.length/e.shape[0];for(let p=0;p<e.shape[0];p++)s.ravel=s.ravel.concat(e.ravel.slice(p*a,p*a+a)),s.shape[0]++,s.shape[0]>t.shape[0]&&(s.ravel.splice(0,a),s.shape[0]--),k(s,t)&&(n.ravel.push(p-t.shape[0]+2),n.shape[0]++);l.push(n);break}case i.FINDSEQ:{let t=l.pop(),e=l.pop();g(e)&&(e=u([1],[e])),g(t)&&(t=u([1],[t]));let n=u([0],[]),s=u([0,...e.shape.slice(1)],[]);const a=e.ravel.length/e.shape[0];for(let p=0;p<e.shape[0];p++)s.ravel=s.ravel.concat(e.ravel.slice(p*a,p*a+a)),s.shape[0]++,n.ravel.push(0),n.shape[0]++,s.shape[0]>t.shape[0]&&(s.ravel.splice(0,a),s.shape[0]--),k(s,t)&&(n.ravel[p-t.shape[0]+1]=1);l.push(n);break}case i.TAKEDROP:{let t=l.pop(),e=l.length-1;g(l[e])&&(l[e]=u([1],[l[e]])),t<0?(l[e].ravel=l[e].ravel.slice(-t*l[e].ravel.length/l[e].shape[0],l[e].ravel.length),l[e].shape[0]-=t):(l[e].ravel=l[e].ravel.slice(0,t*l[e].ravel.length/l[e].shape[0]),l[e].shape[0]=t);break}case i.GRADEUP:{let t=l.pop(),e=t.ravel;for(let n=0;n<e.length;n++)e[n]=[e[n],n];e.sort(function(n,s){return n[0]<s[0]?-1:1}),l.push(u(t.shape,e.map(n=>n[1]+1)));break}case i.GRADEDOWN:{let t=l.pop(),e=t.ravel;for(let n=0;n<e.length;n++)e[n]=[e[n],n];e.sort(function(n,s){return n[0]>s[0]?-1:1}),l.push(u(t.shape,e.map(n=>n[1]+1)));break}case i.DUP:{l.push(JSON.parse(JSON.stringify(l[l.length-1])));break}case i.SWAP:{const t=l.pop(),e=l.pop();l.push(t),l.push(e);break}case i.ROLL:{const t=l.pop(),e=l.pop(),n=l.pop();l.push(t),l.push(n),l.push(e);break}case i.POP:{l.pop();break}default:return[!1,"bytecode error on '"+Object.keys(i).find(t=>i[t]===r)+"'"]}}function F(r){let t=0;for(;t<r.length;){let e=[];for(;t<r.length&&r[t]==i.CONST;)l.push(r[++t]),t++;for(;t<r.length&&[i.FOLD,i.SCAN,i.OPROD].includes(r[t]);)e.push(r[t++]);if(!(t>=r.length)){if(e.length==0){const n=b(r[t]);if(n)return n}else{let n;for(r[t]===i.FUNCTION?(t++,n=()=>{const a=F(r[t]);if(a.length&&a[0]===!1)return a}):n=()=>{const a=b(r[t]);if(a)return a};e.length>0;){const a=e.pop(),p=n;switch(a){case i.FOLD:{n=()=>{const h=l.pop(),o=h.ravel.length/h.shape[0];if(h.shape[0]==0)l.push(u(h.shape.slice(1),new Array(h.shape.slice(1).reduce((c,f)=>c*f,1)).fill().map(c=>0)));else if(h.shape[0]==1)l.push(h.shape.length==1?h.ravel[0]:u(h.shape.slice(1),h.ravel));else{const c=h.ravel.slice(0,o);l.push(h.shape.length==1?c[0]:u(h.shape.slice(1),c));for(let f=1;f<h.shape[0];f++){const d=h.ravel.slice(f*o,f*o+o);l.push(h.shape.length==1?d[0]:u(h.shape.slice(1),d));const m=p();if(m)return m}}};break}case i.SCAN:{n=()=>{const h=l.pop(),o=h.ravel.length/h.shape[0];if(h.shape[0]==0)l.push(u([0,...h.shape.slice(1)],[]));else if(h.shape[0]==1)l.push(u([1,...h.shape.slice(1)],h.ravel));else{let c=u(h.shape,[]);const f=h.ravel.slice(0,o);l.push(h.shape.length==1?f[0]:u(h.shape.slice(1),f)),c.ravel=c.ravel.concat(f);for(let d=1;d<h.shape[0];d++){const m=h.ravel.slice(d*o,d*o+o);l.push(h.shape.length==1?m[0]:u(h.shape.slice(1),m));const S=p();if(S)return S;c.ravel=c.ravel.concat(g(l[l.length-1])?l[l.length-1]:l[l.length-1].ravel)}l.pop(),l.push(c)}};break}case i.OPROD:{n=()=>{if(l.length==1){let m=[],S=l.pop();for(let E=0;E<S.length;E++){l.push(S[E]);const O=p();if(O)return O;m.push(l.pop())}l.push(m);return}let h=l.pop(),o=l.pop(),c=[],f=!1,d=!1;g(h)&&(h=[h],f=!0),g(o)&&(o=[o],d=!0);for(let m=0;m<h.length;m++){c.push([]);for(let S=0;S<o.length;S++){l.push(o[S]),l.push(h[m]);const E=p();if(E)return E;c[m].push(l.pop())}d&&(c=c.concat(c.pop()))}f&&(c=c[0]),l.push(c)};break}default:return[!1,"bytecode error on '"+a+"'"]}}const s=n();if(s)return s}t++}}return l.map(X).join(`
`)}function X(r){if(typeof r=="object"){let t=[],e=1;for(let s=r.shape.length-1;s>=0;s--)e*=r.shape[s],t.push(e);let n="";r.ravel.length||(r.shape.length>1?n+="⍬["+r.shape+"]":n+="⍬");for(let s=0;s<r.ravel.length;s++){if(s!==0)for(let a of t)s%a===0&&(n+=`
`);n+=""+r.ravel[s]+" "}return n}else return""+r}function D(r){let t=Q(r);if(t.length&&t[0]===!1){let p="error: unknown token "+t[1]+`

`,h=0;for(let o of r.split(`
`)){const c=h;if(h+=o.length+1,h>t[2]){p+=o+`
`,p+=" ".repeat(t[2]-c),p+=`↑ here
`;break}}return p}t[t.length-1]!==`
`&&t.push(`
`);let e=[],n=[];t.map(p=>{p!==`
`?n.push(p):(e.push(n),n=[])}),t=e.map(p=>p.reverse()).flat();const s=j(t);if(s.length&&s[0]===!1)return s[1];l=[],N=[];const a=F(s);return a.length&&a[0]===!1?a[1]:a}runresult.innerText=D(A.value);
