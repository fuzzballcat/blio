(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))l(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&l(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();const w=document.getElementById("languagebar"),S=document.getElementById("srcinput");S.value="⌽⊂⍒-⍨×2\\+¨=' '¨'gniroB egaugnaL detnemelpmI ylddO'";S.addEventListener("keydown",s=>{s.keyCode==13&&s.shiftKey&&(runresult.innerText=D(S.value),s.preventDefault())},!1);const I="⍬+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊂⊆⌽⊖,#!⍳⍸&⍒⍋¨⍨⍩∵/\\∘⍤⍣⍥○()'",y="+¯-×÷⌹*⍟↑↓~|⌈⌊%<≤=≥>≠≡≢⊂⊆⌽⊖,#!⍳⍸&⍒⍋¨⍨⍩∵()",T="/\\∘⍤⍣⍥○",C="⍬1234567890",x="¨⍨⍩∵()",_={"⍬":"The empty array","+":`Add
2→1`,"-":`Subtract
2→1`,"×":`Multiply
2→1`,"÷":`Divide
2→1`,"¯":`Negate
1→1`,"⌹":`Matrix inverse
1→1`,"*":`Exponent
2→1`,"⍟":`Logarithm
2→1`,"↑":`Maxmimum
2→1`,"↓":`Minimum
2→1`,"~":`Not
1→1`,"|":`Distance
2→1`,"⌈":`Ceiling
2→1`,"⌊":`Floor
2→1`,"%":`Mod
2→1`,"=":`Equals
2→1`,"≠":`Not equals
2→1`,"<":`Less
2→1`,"≤":`Less or equal
2→1`,"≥":`Greater or equal
2→1`,">":`Greater
2→1`,"≡":`Match
2→1`,"≢":`Not match
2→1`,"⊂":`Index
2→1`,"⊆":`Group
2←1`,"⊖":`Rotate
2→1`,"⌽":`Reverse
1→1`,",":`Catenate
2→1`,"#":`Shape of
1→1`,"!":`Indices/Classify
1→1`,"⍳":`Indices-of
2→1`,"⍸":`Find sequence
2→1`,"&":`Take/drop
2→1`,"⍋":`Grade up
1→1`,"⍒":`Grade down
1→1`,"¨":`Dup
1→2`,"⍨":`Swap
2→2`,"⍩":`Roll
3→3`,"∵":`Pop
1→0`,"/":`Fold
1F`,"\\":`Scan
1F`,"⍤":`With-axes
1F1`,"⍣":`Repeat
1F1`,"∘":`Product
1F1`,"⍥":`Over
1F`,"○":`Under
2F`,"(":`Stack to array
?→1
(+Modifier delimiter)`,")":`Set array stack point
0→0
(+Modifier delimiter)`,"'":"String"},P=s=>x.includes(s)?"hi_k":y.includes(s)?"hi_f":T.includes(s)?"hi_m":s[0]=="'"?"hi_s":C.includes(s)?"hi_c":!1;function F(s){const e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},t=l=>l.replace(/[&<>"'/]/ig,r=>e[r]);return s=s.split("'").map((l,r)=>r%2==0?l.replace(new RegExp([...y,...T,...C].map(o=>o.match(/[0-9]/)?o:"\\"+o).join("|"),"g"),o=>'<span class="'+P(o)+'">'+t(o)+"</span>"):"<span class='hi_s'>'"+l+"'</span>").join(""),s}const M=document.getElementById("srcdisplay");S.addEventListener("input",()=>{M.innerHTML=F(S.value)});M.innerHTML=F(S.value);function v(s,e){if(document.selection)s.focus(),document.selection.createRange().text=myValue;else if(s.selectionStart||s.selectionStart=="0"){const t=s.selectionStart;s.value=s.value.substring(0,t)+e+s.value.substring(s.selectionEnd,s.value.length),s.focus(),s.selectionStart=t+e.length,s.selectionEnd=t+e.length}else s.value+=e}for(let s of I){const e=document.createElement("button");e.classList.add("glyphbutton");const t=P(s);t&&e.classList.add(t),e.innerText=s,w.appendChild(e);const l=document.createElement("div");l.classList.add("glyphbuttontooltip"),l.innerText=_[s],e.appendChild(l),e.addEventListener("click",r=>{v(S,s),S.dispatchEvent(new CustomEvent("input"))},!1)}const Q=document.getElementById("run");Q.addEventListener("click",s=>{runresult.innerText=D(S.value)},!1);function H(s){let e=[];for(let t=0;t<s.length;t++){let l=s[t];if(l!=" ")if(l=="'"){let r="";do if(r+=l,l=s[++t],t>=s.length)break;while(l!="'");e.push(r)}else if(l==`
`||I.includes(l))e.push(l);else if(l.match(/[a-z]/i)){let r="";for(;l.match(/[a-z]/i)&&(r+=l,l=s[++t],!(t>=s.length)););t--,e.push(r)}else if(l.match(/[0-9]/)){let r="";for(;l.match(/[0-9]/)&&(r+=l,l=s[++t],!(t>=s.length)););if(l=="."&&(r+=l,l=s[++t],t<s.length))for(;l.match(/[0-9]/)&&(r+=l,l=s[++t],!(t>=s.length)););t--,e.push(parseFloat(r))}else return[!1,l,t]}return e}const i=["CONST","FUNCTION","ADD","NEGATE","SUB","MUL","DIV","EXP","LOG","MATINV","ARROPEN","ARRCLOSE","MAX","MIN","NOT","DISTANCE","CEILING","FLOOR","MATCH","NMATCH","EQUAL","NEQUAL","LESS","GREATER","LESSEQ","GREATEREQ","INDEX","GROUP","ROTATE","REVERSE","CATENATE","SHAPEOF","INDICES","INDICESOF","FINDSEQ","TAKEDROP","GRADEUP","GRADEDOWN","DUP","SWAP","ROLL","POP","OPROD","FOLD","SCAN"].map((s,e)=>({[s]:e+1})).reduce((s,e)=>({...s,...e}));function V(s){let e=0;const t=[];let l=!1;for(;e<s.length;){const r=s[e];if(typeof r=="number")t.push(i.CONST,r);else if(r.length&&r[0]=="'")t.push(i.CONST,r.length==2?r.slice(1):[...r.slice(1)]);else if(r=="⍬")t.push(i.CONST,[]);else if(typeof r=="string"&&y.includes(r)){const o={"+":i.ADD,"-":i.SUB,"×":i.MUL,"÷":i.DIV,"*":i.EXP,"⍟":i.LOG,"⌹":i.MATINV,"¯":i.NEGATE,"↑":i.MAX,"↓":i.MIN,"~":i.NOT,"|":i.DISTANCE,"⌈":i.CEILING,"⌊":i.FLOOR,"%":i.MOD,"=":i.EQUAL,"≠":i.NEQUAL,"<":i.LESS,">":i.GREATER,"≤":i.LESSEQ,"≥":i.GREATEREQ,"≡":i.MATCH,"≢":i.NMATCH,"⊂":i.INDEX,"⊆":i.GROUP,"⌽":i.REVERSE,"⊖":i.ROTATE,",":i.CATENATE,"#":i.SHAPEOF,"!":i.INDICES,"⍳":i.INDICESOF,"⍸":i.FINDSEQ,"&":i.TAKEDROP,"⍋":i.GRADEUP,"⍒":i.GRADEDOWN,"(":i.ARRCLOSE,")":i.ARROPEN,"¨":i.DUP,"⍨":i.SWAP,"⍩":i.ROLL,"∵":i.POP}[r];if(o===void 0)return[!1,"internalerror on '"+r+"'"];if(t.push(o),o===i.ARRCLOSE){l=!0,e++;continue}}else if(typeof r=="string"&&T.includes(r)){if(l){t.pop();let a=[];for(let p=0;p<t.length;p++){if(t[p]==i.CONST){p++;continue}t[p]==i.ARROPEN&&a.push([")",p]),t[p]==i.ARRCLOSE&&a.push(["(",p])}let h=1,f;for(let p=a.length-1;p>=0;p--)if(a[p][0]==")"?h--:h++,h==0){f=a[p][1];break}t.splice(f,1);let u=[];for(let p=0,O=t.length-f;p<O;p++)u.push(t.pop());t.push(i.FUNCTION,u.reverse())}const o={"/":i.FOLD,"\\":i.SCAN,"∘":i.OPROD}[r];if(o===void 0)return[!1,"internalerror on '"+r+"'"];t.splice(t.length-1-+l,0,o)}else return[!1,"parse error on '"+r+"'"];e++,l=!1}return t}function X(s,e){let t=[];for(let l=0;l<s.length;l++){t[l]=[];for(let r=0;r<e[0].length;r++){let o=0;for(let a=0;a<s[0].length;a++)o+=s[l][a]*e[a][r];t[l][r]=o}}return t}function j(s){if(!Array.isArray(s))return 1/s;if(!s.length)return[];if(!Array.isArray(s[0])){let u=s.map(p=>p*p).reduce((p,O)=>p+O);return s.map(p=>p/u)}if(s[0].length!=s.length||!s.every(u=>u.length==s[0].length))return[!1,"⌹: Nonsquare matrix."];const e=s.length,t=s,l=[],r=[];for(let u=0;u<e;u++)r.push(0);for(let u=0;u<e;u++)l.push([...r]),l[u][u]=1;let o;function a(u){if(u===0)return[[1],l];let[p,O]=a(u-1),A=X(t,O),E=0;for(let g=0;g<e;g++)E+=A[g][g];E/=-u;let m=[];for(let g=0;g<e;g++){m.push([]);for(let k=0;k<e;k++)m[g].push(A[g][k]+l[g][k]*E)}return u==e-1&&(o=m),[p.concat(E),m]}const h=a(e)[0],f=h[h.length-1];if(f===0)return[!1,"⌹: Domain error"];for(let u=0;u<e;u++)for(let p=0;p<e;p++)o[u][p]/=-f;return o}function d(s){return typeof s=="number"||typeof s=="string"}function N(s,e){if(typeof s!=typeof e)return 0;if(d(s))return+(s==e);if(s.length!=e.length)return 0;for(let t=0;t<s.length;t++)if(!N(s[t],e[t]))return 0;return 1}function c(s,e,t){if(typeof e!=typeof t)if(d(e)){let r=[];for(let o=0;o<t.length;o++)r.push(c(s,e,t[o]));return r}else{let r=[];for(let o=0;o<e.length;o++)r.push(c(s,e[o],t));return r}if(d(e))return s(e,t);if(e.length!=t.length)return;let l=[];for(let r=0;r<e.length;r++)l.push(c(s,e[r],t[r]));return l}function R(s,e){if(d(e))return s(e);let t=[];for(let l=0;l<e.length;l++)t.push(R(s,e[l]));return t}let n=[],L=[];function b(s){switch(s){case i.ADD:{let e=n.pop(),t=n.length-1,l=c((r,o)=>r+o,n[t],e);if(l===void 0)return[!1,"+: Shape mismatch"];n[t]=l;break}case i.SUB:{let e=n.pop(),t=n.length-1,l=c((r,o)=>r-o,n[t],e);if(l===void 0)return[!1,"-: Shape mismatch"];n[t]=l;break}case i.NEGATE:{let e=n.length-1;n[e]=R(t=>-t,n[e]);break}case i.MUL:{let e=n.pop(),t=n.length-1,l=c((r,o)=>r*o,n[t],e);if(l===void 0)return[!1,"×: Shape mismatch"];n[t]=l;break}case i.DIV:{let e=n.pop(),t=n.length-1,l=c((r,o)=>r/o,n[t],e);if(l===void 0)return[!1,"÷: Shape mismatch"];n[t]=l;break}case i.EXP:{let e=n.pop(),t=n.length-1,l=c(Math.pow,n[t],e);if(l===void 0)return[!1,"*: Shape mismatch"];n[t]=l;break}case i.LOG:{let e=n.pop(),t=n.length-1,l=c((r,o)=>Math.log(r)/Math.log(o),n[t],e);if(l===void 0)return[!1,"⍟: Shape mismatch"];n[t]=l;break}case i.MATINV:{let e=n.length-1;const t=j(n[e]);if(t.length&&t[0]===!1)return t;n[e]=t;break}case i.ARROPEN:{L.push(n.length);break}case i.ARRCLOSE:{const e=L.pop(),t=n.length;let l=[];for(let r=0;r<t-e;r++)l.push(n.pop());n.push(l);break}case i.MAX:{const e=n.pop();let t=n.length-1,l=c(Math.max,n[t],e);if(l===void 0)return[!1,"↑: Shape mismatch"];n[t]=l;break}case i.MIN:{const e=n.pop();let t=n.length-1,l=c(Math.min,n[t],e);if(l===void 0)return[!1,"↑: Shape mismatch"];n[t]=l;break}case i.NOT:{let e=n.length-1;n[e]=R(t=>+!t,n[e]);break}case i.DISTANCE:{const e=n.pop(),t=n.pop();if(e.length!=t.length)return[!1,"|: Length error"];let l=0;for(let r=0;r<e.length;r++){const o=e[r],a=t[r];if(!d(o)||!d(a))return[!1,"|: Rank error"];l+=Math.pow(a-o,2)}n.push(Math.sqrt(l));break}case i.CEILING:{let e=n.length-1;n[e]=R(Math.ceil,n[e]);break}case i.FLOOR:{let e=n.length-1;n[e]=R(Math.floor,n[e]);break}case i.MOD:{const e=n.pop();let t=n.length-1,l=c((r,o)=>(r%o+o)%o,n[t],e);if(l===void 0)return[!1,"%: Shape mismatch"];n[t]=l;break}case i.MATCH:{const e=n.pop();let t=n.length-1;n[t]=N(n[t],e);break}case i.NMATCH:{const e=n.pop();let t=n.length-1;n[t]=+!N(n[t],e);break}case i.EQUAL:{const e=n.pop();let t=n.length-1,l=c((r,o)=>+(r===o),n[t],e);if(l===void 0)return[!1,"=: Shape mismatch"];n[t]=l;break}case i.NEQUAL:{const e=n.pop();let t=n.length-1,l=c((r,o)=>+(r!==o),n[t],e);if(l===void 0)return[!1,"≠: Shape mismatch"];n[t]=l;break}case i.LESS:{const e=n.pop();let t=n.length-1,l=c((r,o)=>+(r<o),n[t],e);if(l===void 0)return[!1,"<: Shape mismatch"];n[t]=l;break}case i.GREATER:{const e=n.pop();let t=n.length-1,l=c((r,o)=>+(r>o),n[t],e);if(l===void 0)return[!1,">: Shape mismatch"];n[t]=l;break}case i.LESSEQ:{const e=n.pop();let t=n.length-1,l=c((r,o)=>+(r<=o),n[t],e);if(l===void 0)return[!1,"≤: Shape mismatch"];n[t]=l;break}case i.GREATEREQ:{const e=n.pop();let t=n.length-1,l=c((r,o)=>+(r>=o),n[t],e);if(l===void 0)return[!1,"≥: Shape mismatch"];n[t]=l;break}case i.INDEX:{const e=n.pop();let t=n.length-1;n[t]=R(l=>n[t][l-1],e);break}case i.GROUP:{const e=n.pop(),t=n.pop();if(d(e)){n.push(t[e]);break}let l=[];for(let r=0;r<e.length;r++){let o=e[r];Array.isArray(o)||(o=[o]);for(let a of o)if(a!=0){for(;a-1>=l.length;)l.push([]);l[a-1].push(t[r])}}n.push(l);break}case i.ROTATE:{const e=n.pop();let t=n.length-1;if(e>0)for(let l=0;l<e;l++)n[t].push(n[t].shift());else for(let l=0;l<-e;l++)n[t].unshift(n[t].pop());break}case i.REVERSE:{let e=n.length-1,t=n[e].length;for(let l=0;l<t/2;l++){let r=n[e][l];n[e][l]=n[e][t-l-1],n[e][t-l-1]=r}break}case i.CATENATE:{let e=n.pop(),t=n.length-1;d(e)&&(e=[e]),d(n[t])?n[t]=[...e,n[t]]:n[t]=e.concat(n[t]);break}case i.SHAPEOF:{let e=n.length-1;d(n[e])?n[e]=1:n[e]=n[e].length;break}case i.INDICES:{const e=n.pop();let t=[];if(d(e))for(let l=0;l<e;l++)t.push(l);else{let l=[];for(let r=0;r<e.length;r++){const o=l.findIndex(a=>N(e[r],a));o<0?(l.push(e[r]),t.push(l.length)):t.push(o+1)}}n.push(t);break}case i.FINDSEQ:{let e=n.pop(),t=n.pop();if(d(t)&&(t=[t]),d(e)){let o=[];for(let a=0;a<t.length;a++)N(e,t[a])&&o.push(a);n.push(o);break}let l=[],r=[];for(let o=0;o<t.length;o++)r.push(t[o]),l.push(0),r.length>e.length&&r.shift(),N(r,e)&&(l[o-e.length+1]=1);n.push(l);break}case i.TAKEDROP:{let e=n.pop(),t=n.length-1;d(n[t])&&(n[t]=[n[t]]),e<0?n[t]=n[t].slice(0,n[t].length+e):n[t]=n[t].slice(0,e);break}case i.GRADEUP:{let e=n.pop();for(let t=0;t<e.length;t++)e[t]=[e[t],t];e.sort(function(t,l){return t[0]<l[0]?-1:1}),n.push(e.map(t=>t[1]+1));break}case i.GRADEDOWN:{let e=n.pop();for(let t=0;t<e.length;t++)e[t]=[e[t],t];e.sort(function(t,l){return t[0]>l[0]?-1:1}),n.push(e.map(t=>t[1]+1));break}case i.DUP:{n.push(JSON.parse(JSON.stringify(n[n.length-1])));break}case i.SWAP:{const e=n.pop(),t=n.pop();n.push(e),n.push(t);break}case i.ROLL:{const e=n.pop(),t=n.pop(),l=n.pop();n.push(e),n.push(l),n.push(t);break}case i.POP:{n.pop();break}default:return[!1,"bytecode error on '"+Object.keys(i).find(e=>i[e]===s)+"'"]}}function G(s){let e=0;for(;e<s.length;){let t=[];for(;e<s.length&&s[e]==i.CONST;)n.push(s[++e]),e++;for(;e<s.length&&[i.FOLD,i.SCAN,i.OPROD].includes(s[e]);)t.push(s[e++]);if(!(e>=s.length)){if(t.length==0){const l=b(s[e]);if(l)return l}else{let l;for(s[e]===i.FUNCTION?(e++,l=()=>{const o=G(s[e]);if(o.length&&o[0]===!1)return o}):l=()=>{const o=b(s[e]);if(o)return o};t.length>0;){const o=t.pop(),a=l;switch(o){case i.FOLD:{l=()=>{const h=n.pop();if(h.length==0)n.push(0);else if(h.length==1)n.push(h[0]);else for(n.push(h.shift());h.length>0;){n.push(h.shift());const f=a();if(f)return f}};break}case i.SCAN:{l=()=>{const h=n.pop();if(h.length==0)n.push([]);else if(h.length==1)n.push([h[0]]);else{let f=[];for(f.push(h[0]),n.push(h.shift());h.length>0;){n.push(h.shift());const u=a();if(u)return u;f.push(n[n.length-1])}n.pop(),n.push(f)}};break}case i.OPROD:{l=()=>{if(n.length==1){let A=[],E=n.pop();for(let m=0;m<E.length;m++){n.push(E[m]);const g=a();if(g)return g;A.push(n.pop())}n.push(A);return}let h=n.pop(),f=n.pop(),u=[],p=!1,O=!1;d(h)&&(h=[h],p=!0),d(f)&&(f=[f],O=!0);for(let A=0;A<h.length;A++){u.push([]);for(let E=0;E<f.length;E++){n.push(f[E]),n.push(h[A]);const m=a();if(m)return m;u[A].push(n.pop())}O&&(u=u.concat(u.pop()))}p&&(u=u[0]),n.push(u)};break}default:return[!1,"bytecode error on '"+o+"'"]}}const r=l();if(r)return r}e++}}return n.map(U).join(`
`)}function U(s){return Array.isArray(s)?"("+s.map(e=>U(e)).join(" ")+")":s}function D(s){let e=H(s);if(e.length&&e[0]===!1){let a="error: unknown token "+e[1]+`

`,h=0;for(let f of s.split(`
`)){const u=h;if(h+=f.length+1,h>e[2]){a+=f+`
`,a+=" ".repeat(e[2]-u),a+=`↑ here
`;break}}return a}e[e.length-1]!==`
`&&e.push(`
`);let t=[],l=[];e.map(a=>{a!==`
`?l.push(a):(t.push(l),l=[])}),e=t.map(a=>a.reverse()).flat();const r=V(e);if(r.length&&r[0]===!1)return r[1];n=[],L=[];const o=G(r);return o.length&&o[0]===!1?o[1]:o}runresult.innerText=D(S.value);
